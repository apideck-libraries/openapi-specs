openapi: 3.0.0
info:
  version: 10.14.0
  title: Ecommerce API
  description: "Welcome to the Ecommerce API.\n\nYou can use this API to access all Ecommerce API endpoints.\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n| x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |\n| Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |\n\n## Authorization\n\nYou can interact with the API through the authorization methods below.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Pagination\n\nAll API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.\n\nTo fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.\n\nIn the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.\n\n### Query Parameters\n\n| Name   | Type   | Required | Description                                                                                                        |\n| ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |\n| cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |\n| limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |\n\n### Response Body\n\n| Name                  | Type   | Description                                                        |\n| --------------------- | ------ | ------------------------------------------------------------------ |\n| meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |\n| meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |\n| meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |\n| meta.items_on_page    | Number | Number of items returned in the data property of the response      |\n| links.previous        | String | Link to navigate to the previous page of results through the API   |\n| links.current         | String | Link to navigate to the current page of results through the API    |\n| links.next            | String | Link to navigate to the next page of results through the API       |\n\n⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.\n\n## SDKs and API Clients\n\nWe currently offer a [Node.js](https://developers.apideck.com/sdks/node), [PHP](https://developers.apideck.com/sdks/php), [Python](https://developers.apideck.com/sdks/python) and [.NET](https://developers.apideck.com/sdks/dot-net) SDK.\nNeed another SDK? [Request the SDK of your choice](https://requests.apideck.io/request).\n\n## Debugging\n\nBecause of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.\n\n## Errors\n\nThe API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.\n\n| Code | Title                | Description                                                                                                                                                                                              |\n| ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |\n| 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |\n| 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |\n| 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |\n| 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |\n| 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |\n| 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |\n| 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |\n| 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |\n| 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |\n| 429  | Too Many Requests    | You sent too many requests in a given amount of time (\"rate limit\"). Try again later                                                                                                                     |\n| 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |\n\n### Handling errors\n\nThe Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.\n\n### Error Types\n\n#### RequestValidationError\n\nRequest is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.\n\n#### UnsupportedFiltersError\n\nFilters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.\n\n#### UnsupportedSortFieldError\n\nSort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.\n\n#### InvalidCursorError\n\nPagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.\n\n#### ConnectorExecutionError\n\nA Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.\n\n#### UnauthorizedError\n\nWe were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`\n\n#### ConnectorCredentialsError\n\nA request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.\n\n#### ConnectorDisabledError\n\nA request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.\n\n#### ConnectorRateLimitError\n\nYou sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.\n\n#### RequestLimitError\n\nYou have reached the number of requests included in your Free Tier Subscription. You will not be able to make further requests until you upgrade your subscription. Please reach out to sales@apideck.com to continue making requests.\n\n#### EntityNotFoundError\n\nYou've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.\n\n#### OAuthCredentialsNotFoundError\n\nWhen adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.\n\n#### IntegrationNotFoundError\n\nThe requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.\n\n#### ConnectionNotFoundError\n\nA valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.\n\n#### ConnectionSettingsError\n\nThe connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.\n\n#### ConnectorNotFoundError\n\nA request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.\n\n#### OAuthRedirectUriError\n\nA request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.\n\n#### OAuthInvalidStateError\n\nThe state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.\n\n#### OAuthCodeExchangeError\n\nWhen attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.\n\n#### OAuthConnectorError\n\nIt seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### MappingError\n\nThere was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.\n\n#### ConnectorMappingNotFoundError\n\nIt seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorResponseMappingNotFoundError\n\nWe were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationMappingNotFoundError\n\nConnector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorWorkflowMappingError\n\nThe composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationUnsupportedError\n\nYou're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.\n\n#### PaginationNotSupportedError\n\nPagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n## API Design\n\n### API Styles and data formats\n\n#### REST API\n\nThe API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.\n\n##### Available HTTP methods\n\nThe Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \\_method.\n\n```\nPOST /messages\nGET /messages\nGET /messages/{messageId}\nPATCH /messages/{messageId}\nDELETE /messages/{messageId}\n```\n\nResponse bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.\n\n### Schema\n\nAll API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.\n\n### Meta\n\nMeta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.\n\n### Request IDs\n\nEach API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n### Fixed field types\n\n#### Dates\n\nThe dates returned by the API are all represented in UTC (ISO8601 format).\n\nThis example\_`2019-11-14T00:55:31.820Z`\_is defined by the\_ISO 8601\_standard. The\_T\_in the middle separates the year-month-day portion from the hour-minute-second portion. The\_Z\_on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The\_Z\_is pronounced \"Zulu\" per military/aviation tradition.\n\nThe ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.\n\n#### Prices and Currencies\n\nAll prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).\n\nFor zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.\n\nAll currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n## Support\n\nIf you have problems or need help with your case, you can always reach out to our Support.\n\n## Static IP\n\nSome of the APIs you want to use can require a static IP. Apideck's static IP feature allows you to use Apideck with a fixed IP avoiding the need for you to set up your own infrastructure. This feature is currently available to all Apideck customers.\nTo use this feature, the API Vendor will need to whitelist the associated static IP addresses.\nThe provided static IP addresses are fixed to their specified region and shared by all customers who use this feature.\n\n- EU Central 1: **18.197.244.247**, **18.156.9.3**, **3.65.139.215**\n- Other: upcoming\n\n  More info about our data security can be found at [https://compliance.apideck.com/](https://compliance.apideck.com/)\n\n"
  contact:
    email: hello@apideck.com
    url: https://developers.apideck.com
  x-logo:
    url: https://developers.apideck.com/icon.png
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  x-apideck-api: ecommerce
  x-apideck-sdk-support: true
externalDocs:
  description: Apideck Developer Docs
  url: https://developers.apideck.com
servers:
  - url: https://unify.apideck.com
components:
  parameters:
    applicationId:
      name: x-apideck-app-id
      in: header
      required: true
      description: The ID of your Unify application
      schema:
        type: string
      example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
      x-speakeasy-name-override: appId
    consumerId:
      name: x-apideck-consumer-id
      in: header
      required: true
      description: ID of the consumer which you want to get or push data from
      schema:
        type: string
      example: test-consumer
      x-speakeasy-name-override: consumerId
    cursor:
      name: cursor
      in: query
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      schema:
        type: string
        nullable: true
    customersFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/EcommerceCustomersFilter'
    fields:
      name: fields
      in: query
      description: 'The ''fields'' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.'
      example: id,updated_at
      schema:
        type: string
        nullable: true
    id:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: ID of the record you are acting upon.
    limit:
      name: limit
      in: query
      description: Number of results to return. Minimum 1, Maximum 200, Default 20
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
    ordersFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/EcommerceOrdersFilter'
    ordersSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/OrdersSort'
    raw:
      name: raw
      in: query
      description: Include raw response. Mostly used for debugging purposes
      schema:
        type: boolean
        default: false
    serviceId:
      name: x-apideck-service-id
      in: header
      description: Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
      schema:
        type: string
      example: salesforce
      x-speakeasy-name-override: serviceId
    passThrough:
      name: pass_through
      in: query
      description: 'Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads'
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/PassThroughQuery'
  responses:
    BadRequestResponse:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
    CreateEcommerceCustomerResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateEcommerceCustomerResponse'
    CreateEcommerceOrderResponse:
      description: Orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateEcommerceOrderResponse'
    CreateProductResponse:
      description: Products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProductResponse'
    DeleteEcommerceCustomerResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteEcommerceCustomerResponse'
    DeleteEcommerceOrderResponse:
      description: Orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteEcommerceOrderResponse'
    DeleteProductResponse:
      description: Products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteProductResponse'
    GetEcommerceCustomerResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEcommerceCustomerResponse'
    GetEcommerceCustomersResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEcommerceCustomersResponse'
    GetEcommerceOrderResponse:
      description: Orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEcommerceOrderResponse'
    GetEcommerceOrdersResponse:
      description: Orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEcommerceOrdersResponse'
    GetProductResponse:
      description: Products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProductResponse'
    GetProductsResponse:
      description: Products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProductsResponse'
    GetStoreResponse:
      description: Stores
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoreResponse'
    GetStoresResponse:
      description: Stores
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoresResponse'
    NotFoundResponse:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
    NotImplementedResponse:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotImplementedResponse'
    PaymentRequiredResponse:
      description: Payment Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequiredResponse'
    UnauthorizedResponse:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedResponse'
    UnexpectedErrorResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedErrorResponse'
    UnprocessableResponse:
      description: Unprocessable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableResponse'
    UpdateEcommerceCustomerResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateEcommerceCustomerResponse'
    UpdateEcommerceOrderResponse:
      description: Orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateEcommerceOrderResponse'
    UpdateProductResponse:
      description: Products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductResponse'
  schemas:
    Address:
      type: object
      x-apideck-schema-id: Address
      additionalProperties: false
      x-apideck-weights:
        id: edge-case
        name: edge-case
        type: critical
        line1: high
        line2: low
        line3: edge-case
        line4: edge-case
        street_number: low
        city: high
        string: low
        state: high
        postal_code: high
        country: high
        latitude: low
        longitude: low
        county: edge-case
        contact_name: edge-case
        salutation: edge-case
        phone_number: edge-case
        fax: edge-case
        email: edge-case
        website: edge-case
        row_version: edge-case
      properties:
        id:
          description: Unique identifier for the address.
          type: string
          example: '123'
          nullable: true
        type:
          type: string
          description: The type of address.
          x-apideck-enum-id: addresses.type
          enum:
            - primary
            - secondary
            - home
            - office
            - shipping
            - billing
            - other
          example: primary
          nullable: true
        string:
          type: string
          description: The address string. Some APIs don't provide structured address data.
          example: 25 Spring Street, Blackburn, VIC 3130
          nullable: true
        name:
          description: The name of the address.
          type: string
          example: HQ US
          nullable: true
        line1:
          type: string
          example: Main street
          description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'
          nullable: true
        line2:
          type: string
          example: 'apt #'
          description: Line 2 of the address
          nullable: true
        line3:
          type: string
          example: 'Suite #'
          description: Line 3 of the address
          nullable: true
        line4:
          type: string
          example: delivery instructions
          description: Line 4 of the address
          nullable: true
        street_number:
          type: string
          example: '25'
          description: Street number
          nullable: true
        city:
          type: string
          example: San Francisco
          description: Name of city.
          nullable: true
        state:
          type: string
          example: CA
          description: Name of state
          nullable: true
        postal_code:
          type: string
          example: '94104'
          description: Zip code or equivalent.
          nullable: true
        country:
          type: string
          example: US
          description: country code according to ISO 3166-1 alpha-2.
          nullable: true
        latitude:
          description: Latitude of the address
          type: string
          example: '40.759211'
          nullable: true
        longitude:
          description: Longitude of the address
          type: string
          example: '-73.984638'
          nullable: true
        county:
          type: string
          example: Santa Clara
          description: Address field that holds a sublocality, such as a county
          nullable: true
        contact_name:
          description: Name of the contact person at the address
          type: string
          example: Elon Musk
          nullable: true
        salutation:
          description: Salutation of the contact person at the address
          type: string
          example: Mr
          nullable: true
        phone_number:
          description: Phone number of the address
          type: string
          example: 111-111-1111
          nullable: true
        fax:
          description: Fax number of the address
          type: string
          example: 122-111-1111
          nullable: true
        email:
          description: Email address of the address
          type: string
          example: elon@musk.com
          nullable: true
        website:
          description: Website of the address
          type: string
          example: https://elonmusk.com
          nullable: true
        notes:
          description: Additional notes
          type: string
          title: Notes
          example: Address notes or delivery instructions.
          nullable: true
        row_version:
          $ref: '#/components/schemas/RowVersion'
    BadRequestResponse:
      type: object
      x-apideck-schema-id: BadRequest
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        type_name:
          type: string
          description: The type of error returned
          example: RequestValidationError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: Missing property foobar
            - type: object
              x-speakeasy-detail: true
              example:
                missing:
                  - foobar: required
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestvalidationerror
    CreateEcommerceCustomerResponse:
      type: object
      x-apideck-schema-id: CreateEcommerceCustomerResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: customers
        operation:
          type: string
          description: Operation performed
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    CreateEcommerceOrderResponse:
      type: object
      x-apideck-schema-id: CreateEcommerceOrderResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: orders
        operation:
          type: string
          description: Operation performed
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    CreateProductResponse:
      type: object
      x-apideck-schema-id: CreateProductResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: products
        operation:
          type: string
          description: Operation performed
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    CreatedAt:
      type: string
      title: Created at (timestamp)
      description: The date and time when the object was created.
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      readOnly: true
      nullable: true
    CreatedBy:
      type: string
      title: Created by
      description: The user who created the object.
      example: '12345'
      readOnly: true
      nullable: true
    Currency:
      type: string
      title: Currency
      description: Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
      example: USD
      x-apideck-enum-id: currencies
      x-apideck-enum-coverage-ignore: true
      enum:
        - UNKNOWN_CURRENCY
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRC
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMK
        - ZMW
        - BTC
        - ETH
      x-enum-elements:
        - name: UNKNOWN_CURRENCY
          description: Unknown currency
        - name: AED
          description: United Arab Emirates dirham
        - name: AFN
          description: Afghan afghani
        - name: ALL
          description: Albanian lek
        - name: AMD
          description: Armenian dram
        - name: ANG
          description: Netherlands Antillean guilder
        - name: AOA
          description: Angolan kwanza
        - name: ARS
          description: Argentine peso
        - name: AUD
          description: Australian dollar
        - name: AWG
          description: Aruban florin
        - name: AZN
          description: Azerbaijani manat
        - name: BAM
          description: Bosnia and Herzegovina convertible mark
        - name: BBD
          description: Barbados dollar
        - name: BDT
          description: Bangladeshi taka
        - name: BGN
          description: Bulgarian lev
        - name: BHD
          description: Bahraini dinar
        - name: BIF
          description: Burundian franc
        - name: BMD
          description: Bermudian dollar
        - name: BND
          description: Brunei dollar
        - name: BOB
          description: Boliviano
        - name: BOV
          description: Bolivian Mvdol
        - name: BRL
          description: Brazilian real
        - name: BSD
          description: Bahamian dollar
        - name: BTN
          description: Bhutanese ngultrum
        - name: BWP
          description: Botswana pula
        - name: BYR
          description: Belarusian ruble
        - name: BZD
          description: Belize dollar
        - name: CAD
          description: Canadian dollar
        - name: CDF
          description: Congolese franc
        - name: CHE
          description: WIR Euro
        - name: CHF
          description: Swiss franc
        - name: CHW
          description: WIR Franc
        - name: CLF
          description: Unidad de Fomento
        - name: CLP
          description: Chilean peso
        - name: CNY
          description: Chinese yuan
        - name: COP
          description: Colombian peso
        - name: COU
          description: Unidad de Valor Real
        - name: CRC
          description: Costa Rican colon
        - name: CUC
          description: Cuban convertible peso
        - name: CUP
          description: Cuban peso
        - name: CVE
          description: Cape Verdean escudo
        - name: CZK
          description: Czech koruna
        - name: DJF
          description: Djiboutian franc
        - name: DKK
          description: Danish krone
        - name: DOP
          description: Dominican peso
        - name: DZD
          description: Algerian dinar
        - name: EGP
          description: Egyptian pound
        - name: ERN
          description: Eritrean nakfa
        - name: ETB
          description: Ethiopian birr
        - name: EUR
          description: Euro
        - name: FJD
          description: Fiji dollar
        - name: FKP
          description: Falkland Islands pound
        - name: GBP
          description: Pound sterling
        - name: GEL
          description: Georgian lari
        - name: GHS
          description: Ghanaian cedi
        - name: GIP
          description: Gibraltar pound
        - name: GMD
          description: Gambian dalasi
        - name: GNF
          description: Guinean franc
        - name: GTQ
          description: Guatemalan quetzal
        - name: GYD
          description: Guyanese dollar
        - name: HKD
          description: Hong Kong dollar
        - name: HNL
          description: Honduran lempira
        - name: HRK
          description: Croatian kuna
        - name: HTG
          description: Haitian gourde
        - name: HUF
          description: Hungarian forint
        - name: IDR
          description: Indonesian rupiah
        - name: ILS
          description: Israeli new shekel
        - name: INR
          description: Indian rupee
        - name: IQD
          description: Iraqi dinar
        - name: IRR
          description: Iranian rial
        - name: ISK
          description: Icelandic króna
        - name: JMD
          description: Jamaican dollar
        - name: JOD
          description: Jordanian dinar
        - name: JPY
          description: Japanese yen
        - name: KES
          description: Kenyan shilling
        - name: KGS
          description: Kyrgyzstani som
        - name: KHR
          description: Cambodian riel
        - name: KMF
          description: Comoro franc
        - name: KPW
          description: North Korean won
        - name: KRW
          description: South Korean won
        - name: KWD
          description: Kuwaiti dinar
        - name: KYD
          description: Cayman Islands dollar
        - name: KZT
          description: Kazakhstani tenge
        - name: LAK
          description: Lao kip
        - name: LBP
          description: Lebanese pound
        - name: LKR
          description: Sri Lankan rupee
        - name: LRD
          description: Liberian dollar
        - name: LSL
          description: Lesotho loti
        - name: LTL
          description: Lithuanian litas
        - name: LVL
          description: Latvian lats
        - name: LYD
          description: Libyan dinar
        - name: MAD
          description: Moroccan dirham
        - name: MDL
          description: Moldovan leu
        - name: MGA
          description: Malagasy ariary
        - name: MKD
          description: Macedonian denar
        - name: MMK
          description: Myanmar kyat
        - name: MNT
          description: Mongolian tögrög
        - name: MOP
          description: Macanese pataca
        - name: MRO
          description: Mauritanian ouguiya
        - name: MUR
          description: Mauritian rupee
        - name: MVR
          description: Maldivian rufiyaa
        - name: MWK
          description: Malawian kwacha
        - name: MXN
          description: Mexican peso
        - name: MXV
          description: Mexican Unidad de Inversion
        - name: MYR
          description: Malaysian ringgit
        - name: MZN
          description: Mozambican metical
        - name: NAD
          description: Namibian dollar
        - name: NGN
          description: Nigerian naira
        - name: NIO
          description: Nicaraguan córdoba
        - name: NOK
          description: Norwegian krone
        - name: NPR
          description: Nepalese rupee
        - name: NZD
          description: New Zealand dollar
        - name: OMR
          description: Omani rial
        - name: PAB
          description: Panamanian balboa
        - name: PEN
          description: Peruvian sol
        - name: PGK
          description: Papua New Guinean kina
        - name: PHP
          description: Philippine peso
        - name: PKR
          description: Pakistani rupee
        - name: PLN
          description: Polish złoty
        - name: PYG
          description: Paraguayan guaraní
        - name: QAR
          description: Qatari riyal
        - name: RON
          description: Romanian leu
        - name: RSD
          description: Serbian dinar
        - name: RUB
          description: Russian ruble
        - name: RWF
          description: Rwandan franc
        - name: SAR
          description: Saudi riyal
        - name: SBD
          description: Solomon Islands dollar
        - name: SCR
          description: Seychelles rupee
        - name: SDG
          description: Sudanese pound
        - name: SEK
          description: Swedish krona
        - name: SGD
          description: Singapore dollar
        - name: SHP
          description: Saint Helena pound
        - name: SLL
          description: Sierra Leonean leone
        - name: SOS
          description: Somali shilling
        - name: SRD
          description: Surinamese dollar
        - name: SSP
          description: South Sudanese pound
        - name: STD
          description: São Tomé and Príncipe dobra
        - name: SVC
          description: Salvadoran colón
        - name: SYP
          description: Syrian pound
        - name: SZL
          description: Swazi lilangeni
        - name: THB
          description: Thai baht
        - name: TJS
          description: Tajikstani somoni
        - name: TMT
          description: Turkmenistan manat
        - name: TND
          description: Tunisian dinar
        - name: TOP
          description: Tongan pa'anga
        - name: TRY
          description: Turkish lira
        - name: TTD
          description: Trinidad and Tobago dollar
        - name: TWD
          description: New Taiwan dollar
        - name: TZS
          description: Tanzanian shilling
        - name: UAH
          description: Ukrainian hryvnia
        - name: UGX
          description: Ugandan shilling
        - name: USD
          description: United States dollar
        - name: USN
          description: United States dollar (next day)
        - name: USS
          description: United States dollar (same day)
        - name: UYI
          description: Uruguay Peso en Unidedades Indexadas
        - name: UYU
          description: Uruguyan peso
        - name: UZS
          description: Uzbekistan som
        - name: VEF
          description: Venezuelan bolívar soberano
        - name: VND
          description: Vietnamese đồng
        - name: VUV
          description: Vanuatu vatu
        - name: WST
          description: Samoan tala
        - name: XAF
          description: CFA franc BEAC
        - name: XAG
          description: Silver
        - name: XAU
          description: Gold
        - name: XBA
          description: European Composite Unit
        - name: XBB
          description: European Monetary Unit
        - name: XBC
          description: European Unit of Account 9
        - name: XBD
          description: European Unit of Account 17
        - name: XCD
          description: East Caribbean dollar
        - name: XDR
          description: Special drawing rights (International Monetary Fund)
        - name: XOF
          description: CFA franc BCEAO
        - name: XPD
          description: Palladium
        - name: XPF
          description: CFP franc
        - name: XPT
          description: Platinum
        - name: XTS
          description: Code reserved for testing
        - name: XXX
          description: No currency
        - name: YER
          description: Yemeni rial
        - name: ZAR
          description: South African rand
        - name: ZMK
          description: Zambian kwacha
        - name: ZMW
          description: Zambian kwacha
        - name: BTC
          description: Bitcoin
        - name: ETH
          description: Ether
      nullable: true
    CustomField:
      type: object
      x-apideck-schema-id: CustomField
      required:
        - id
      additionalProperties: false
      x-apideck-weights:
        id: critical
        value: critical
        name: medium
        description: edge-case
      properties:
        id:
          title: ID
          description: Unique identifier for the custom field.
          type: string
          example: '2389328923893298'
          nullable: true
        name:
          title: Name
          type: string
          description: Name of the custom field.
          example: employee_level
          nullable: true
        description:
          title: Description
          type: string
          description: More information about the custom field
          example: Employee Level
          nullable: true
        value:
          anyOf:
            - type: string
              example: Uses Salesforce and Marketo
              nullable: true
            - type: number
              example: 10
              nullable: true
            - type: boolean
              example: true
              nullable: true
            - type: object
              example:
                foo: bar
              nullable: true
            - type: array
              items:
                type: string
            - type: array
              items:
                type: object
    DeleteEcommerceCustomerResponse:
      type: object
      x-apideck-schema-id: DeleteEcommerceCustomerResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: customers
        operation:
          type: string
          description: Operation performed
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    DeleteEcommerceOrderResponse:
      type: object
      x-apideck-schema-id: DeleteEcommerceOrderResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: orders
        operation:
          type: string
          description: Operation performed
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    DeleteProductResponse:
      type: object
      x-apideck-schema-id: DeleteProductResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: products
        operation:
          type: string
          description: Operation performed
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    Department:
      type: object
      x-apideck-schema-id: Department
      x-apideck-weights:
        id: critical
        parent_id: medium
        name: critical
        code: medium
        description: low
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/Id'
        parent_id:
          description: Parent ID
          type: string
          readOnly: true
          nullable: true
          example: '22345'
        name:
          title: Name
          description: Department name
          type: string
          example: R&D
          nullable: true
        code:
          title: Code
          type: string
          example: '2'
          nullable: true
        description:
          title: Description
          type: string
          example: R&D
          nullable: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
    Description:
      type: string
      title: Description
      description: A description of the object.
      example: A description
      nullable: true
    Division:
      type: string
      title: Division
      description: The division the person is currently in. Usually a collection of departments or teams or regions.
      example: Europe
      nullable: true
    EcommerceAddress:
      title: Ecommerce Address
      description: An object representing a shipping or billing address.
      type: object
      x-apideck-schema-id: EcommerceAddress
      x-apideck-weights:
        line1: critical
        city: critical
        state: critical
        postal_code: critical
        country: critical
        company_name: low
      x-apideck-strict-required:
        - line1
        - city
        - state
        - postal_code
        - country
      properties:
        line1:
          type: string
          title: Address line 1
          description: Address line 1 of the billing address.
          example: 123 Main Street
          nullable: true
        line2:
          type: string
          title: Address line 2
          description: Address line 2 of the billing address.
          example: Apt 1
          nullable: true
        company_name:
          type: string
          example: Acme Inc.
          title: Company Name
          description: Company name of the customer
          nullable: true
        city:
          type: string
          title: City
          description: City of the billing address.
          example: New York
          nullable: true
        state:
          type: string
          title: State
          description: State/province of the billing address.
          example: NY
          nullable: true
        postal_code:
          type: string
          title: Postal code
          description: Postal/ZIP code of the billing address.
          example: '10001'
          nullable: true
        country:
          type: string
          title: Country
          description: Country of the billing address.
          maxLength: 2
          example: US
          nullable: true
    EcommerceCustomer:
      type: object
      x-apideck-schema-id: EcommerceCustomer
      x-apideck-weights:
        id: critical
        emails: critical
        first_name: critical
        last_name: critical
        name: critical
        currency: edge-case
      additionalProperties: false
      required:
        - id
      x-apideck-strict-required:
        - emails
        - addresses
      x-apideck-strict-any-of:
        - required:
            - name
            - first_name
            - last_name
        - required:
            - company_name
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          example: John Doe
          title: Full Name
          description: Full name of the customer
          nullable: true
        first_name:
          type: string
          example: John
          title: First Name
          description: First name of the customer
          nullable: true
        last_name:
          type: string
          example: Doe
          title: Last Name
          description: Last name of the customer
          nullable: true
        company_name:
          type: string
          example: Acme Inc.
          title: Company Name
          description: Company name of the customer
          nullable: true
        status:
          type: string
          example: active
          enum:
            - active
            - archived
          title: Customer status
          description: The current status of the customer
          nullable: true
          x-apideck-enum-id: ecommerce.customer.status
        currency:
          $ref: '#/components/schemas/Currency'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
          title: Email Addresses
          description: An array of email addresses for the customer.
          nullable: true
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
          title: Phone Numbers
          description: An array of phone numbers for the customer.
          nullable: true
        addresses:
          type: array
          items:
            type: object
            additionalProperties: false
            x-apideck-weights:
              line1: critical
              city: critical
              state: critical
              postal_code: critical
              country: critical
            x-apideck-strict-required:
              - line1
              - city
              - state
              - postal_code
              - country
            properties:
              type:
                type: string
                x-apideck-enum-id: ecommerce.customer.addresses.type
                enum:
                  - billing
                  - shipping
                  - other
                example: billing
              id:
                $ref: '#/components/schemas/IdOrNull'
              line1:
                type: string
                example: Main street
                title: Address Line 1
                description: First line of the street address of the customer
                nullable: true
              line2:
                type: string
                example: 'apt #'
                title: Address Line 2
                description: Second line of the street address of the customer
                nullable: true
              city:
                type: string
                example: Anytown
                title: City
                description: City of the customer
                nullable: true
              state:
                type: string
                example: Ohio
                title: State
                description: State of the customer
                nullable: true
              postal_code:
                type: string
                example: '12345'
                title: Postal Code
                description: Postal code of the customer
                nullable: true
              country:
                type: string
                example: US
                title: Country
                description: Country of the customer
                nullable: true
          title: Addresses
          description: An array of addresses for the customer.
        orders:
          type: array
          items:
            $ref: '#/components/schemas/LinkedEcommerceOrder'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    EcommerceCustomersFilter:
      type: object
      x-apideck-schema-id: EcommerceCustomersFilter
      example:
        email: elon@musk.com
        phone_number: 111-111-1111
      properties:
        email:
          type: string
          description: Customer email address to filter on
          example: elon@musk.com
        phone_number:
          type: string
          description: Customer phone number to filter on
          example: 111-111-1111
      additionalProperties: false
    EcommerceDiscount:
      title: Ecommerce Discount
      description: An object representing a discount applied to an ecommerce order or product.
      type: object
      x-apideck-schema-id: EcommerceDiscount
      x-apideck-weights:
        code: low
      x-apideck-strict-one-of:
        - required:
            - amount
        - required:
            - percentage
      properties:
        code:
          type: string
          title: Discount code
          description: The code used to apply the discount.
          example: SUMMER20
          nullable: true
        amount:
          type: string
          title: Discount amount
          description: The fixed amount of the discount.
          example: '5.99'
          nullable: true
        percentage:
          type: string
          title: Discount percentage
          description: The percentage of the discount.
          example: '0.1'
          nullable: true
    EcommerceOrder:
      type: object
      x-apideck-schema-id: EcommerceOrder
      x-apideck-weights:
        id: critical
        order_number: medium
        currency: critical
        discounts: low
        sub_total: medium
        shipping_cost: medium
        total_discount: medium
        coupon_discount: medium
        total_tax: critical
        total_amount: critical
        refunded_amount: medium
        status: critical
        payment_status: critical
        fulfillment_status: critical
        payment_method: critical
        customer: critical
        billing_address: critical
        shipping_address: critical
        tracking: medium
        line_items: critical
        note: medium
        created_at: medium
        updated_at: medium
      additionalProperties: false
      required:
        - id
      x-apideck-strict-required:
        - currency
        - total_tax
        - total_amount
        - customer
        - billing_address
        - shipping_address
        - line_items
      x-apideck-strict-any-of:
        - required:
            - status
        - required:
            - payment_status
        - required:
            - fulfillment_status
      properties:
        id:
          $ref: '#/components/schemas/Id'
        order_number:
          type: string
          title: Order number
          description: Order number, if any.
          example: '123456789'
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceDiscount'
        sub_total:
          type: string
          title: Sub-total amount
          description: Sub-total amount, normally before tax.
          example: '45.17'
          nullable: true
        shipping_cost:
          type: string
          title: Shipping cost
          description: Shipping cost, if any.
          example: '5.17'
          nullable: true
        coupon_discount:
          type: string
          title: Coupon discount
          description: Coupon discount, if any.
          example: '5.5'
          nullable: true
        total_discount:
          type: string
          title: Total discount
          description: Total discount, if any.
          example: '5.5'
          nullable: true
        total_tax:
          type: string
          title: Total tax
          description: Total tax, if any.
          example: '5.16'
          nullable: true
        total_amount:
          type: string
          title: Total amount
          description: Total amount due.
          example: '50.17'
          nullable: true
        refunded_amount:
          type: string
          title: Refunded amount
          description: Refunded amount, if any.
          example: '5.5'
          nullable: true
        status:
          $ref: '#/components/schemas/EcommerceOrderStatus'
        payment_status:
          type: string
          x-apideck-enum-id: ecommerce.order.payment_status
          title: Payment status
          description: Current payment status of the order.
          enum:
            - pending
            - authorized
            - paid
            - partial
            - refunded
            - voided
            - unknown
          example: paid
          nullable: true
        fulfillment_status:
          type: string
          x-apideck-enum-id: ecommerce.order.fulfillment_status
          title: Fulfillment status
          description: Current fulfillment status of the order.
          enum:
            - pending
            - shipped
            - partial
            - delivered
            - cancelled
            - returned
            - unknown
          example: shipped
          nullable: true
        payment_method:
          type: string
          title: Payment method
          description: Payment method used for this order.
          example: credit_card
          nullable: true
        customer:
          $ref: '#/components/schemas/LinkedEcommerceCustomer'
        billing_address:
          $ref: '#/components/schemas/EcommerceAddress'
        shipping_address:
          $ref: '#/components/schemas/EcommerceAddress'
        tracking:
          type: array
          items:
            $ref: '#/components/schemas/TrackingItem'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceOrderLineItem'
        note:
          type: string
          title: Note
          description: Note for the order.
          example: Special instructions for delivery
          nullable: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    EcommerceOrderLineItem:
      type: object
      title: Ecommerce Order Line Item
      description: A single line item of an ecommerce order, representing a product or variant with associated options, quantity, and pricing information.
      x-apideck-schema-id: EcommerceOrderLineItem
      x-apideck-weights:
        id: high
        product_id: medium
        variant_id: medium
        sku: medium
        name: critical
        description: medium
        options: medium
        quantity: critical
        unit_price: critical
        tax_rate: medium
        tax_amount: medium
        is_refunded: medium
        refunded_amount: medium
        refunded_quantity: medium
        sub_total: medium
        total_amount: critical
        discounts: medium
      required:
        - name
        - quantity
        - total_amount
      x-apideck-strict-required:
        - name
        - quantity
        - total_amount
      x-apideck-strict-any-of:
        - required:
            - id
        - required:
            - product_id
      properties:
        id:
          $ref: '#/components/schemas/IdOrNull'
        product_id:
          type: string
          title: Product ID
          description: A unique identifier for the product associated with the line item.
          example: def456
          nullable: true
        variant_id:
          type: string
          title: Variant ID
          description: A unique identifier for the variant of the product associated with the line item, if applicable.
          example: ghi789
          nullable: true
        sku:
          type: string
          title: SKU
          description: The SKU of the product or variant associated with the line item.
          example: MBP123-16GB-SILVER-13
          nullable: true
        name:
          type: string
          title: Name
          description: The name of the product or variant associated with the line item.
          example: Midnight 16inch MacBook Pro
          nullable: true
        description:
          type: string
          title: Description
          description: The description of the product or variant associated with the line item.
          example: Powerful and portable, the MacBook Pro is perfect for professionals and creatives.
          nullable: true
        options:
          type: array
          items:
            properties:
              id:
                type: string
                title: Option identifier
                description: A unique identifier for the option.
                example: jkl012
                nullable: true
              name:
                type: string
                title: Option Name
                description: The name of the option.
                example: Color
                nullable: true
              value:
                type: string
                title: Option Value
                description: The value of the option.
                example: Silver
                nullable: true
        quantity:
          type: string
          title: Quantity
          description: The quantity of the product or variant associated with the line item.
          example: '2'
          nullable: true
        unit_price:
          type: string
          title: Unit price
          description: The unit price of the product or variant associated with the line item.
          example: '19.99'
          nullable: true
        tax_rate:
          type: string
          title: Tax rate
          description: The tax rate applied to the product or variant associated with the line item.
          example: '0.08'
          nullable: true
        tax_amount:
          type: string
          title: Tax amount
          description: The total tax amount applied to the product or variant associated with the line item.
          example: '1.6'
          nullable: true
        is_refunded:
          type: boolean
          title: Is refunded
          description: Whether the line item has been refunded.
          example: false
          nullable: true
        refunded_amount:
          type: string
          title: Refunded amount
          description: The amount of the line item that has been refunded.
          example: '0'
          nullable: true
        refunded_quantity:
          type: string
          title: Refunded quantity
          description: The quantity of the line item that has been refunded.
          example: '0'
          nullable: true
        sub_total:
          type: string
          title: Sub total
          description: The sub total for the product(s) or variant associated with the line item, excluding taxes and discounts.
          example: '43.18'
          nullable: true
        total_amount:
          type: string
          title: Total amount
          description: The total amount for the product(s) or variant associated with the line item, including taxes and discounts.
          example: '43.18'
          nullable: true
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceDiscount'
    EcommerceOrderStatus:
      type: string
      x-apideck-enum-id: order.status
      title: Order Status
      description: Current status of the order.
      enum:
        - active
        - completed
        - cancelled
        - archived
        - unknown
        - other
      example: active
      nullable: true
    EcommerceOrdersFilter:
      type: object
      x-apideck-schema-id: EcommerceOrdersFilter
      example:
        email: elon@musk.com
        customer_id: '123'
        updated_since: '2020-09-30T07:43:32.000Z'
        created_since: '2020-09-30T07:43:32.000Z'
      properties:
        email:
          type: string
          description: Customer email address to filter on
          example: elon@musk.com
        customer_id:
          type: string
          description: Customer id to filter on
          example: '123'
        updated_since:
          type: string
          description: Minimum date the order was last modified
          example: '2020-09-30T07:43:32.000Z'
        created_since:
          type: string
          description: Minimum date the order was created
          example: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
    EcommerceProduct:
      type: object
      x-apideck-schema-id: EcommerceProduct
      x-apideck-weights:
        id: critical
        name: critical
        description: medium
        status: medium
        price: critical
        sku: medium
        inventory_quantity: medium
        images: medium
        weight: medium
        weight_unit: medium
        options: medium
        variants: medium
        tags: medium
        categories: medium
        created_at: medium
        updated_at: medium
      additionalProperties: false
      required:
        - id
      x-apideck-strict-required:
        - name
      x-apideck-strict-any-of:
        - required:
            - price
        - required:
            - variants
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          example: MacBook Pro
          title: Product Name
          description: The name of the product as it should be displayed to customers.
          nullable: true
        description:
          type: string
          example: Powerful and portable, the MacBook Pro is perfect for professionals and creatives.
          title: Product Description
          description: A detailed description of the product.
          nullable: true
        status:
          type: string
          enum:
            - active
            - archived
          example: active
          title: Product Status
          description: The current status of the product (active or archived).
          nullable: true
          x-apideck-enum-id: ecommerce.products.status
        price:
          type: string
          example: '1999.99'
          title: Product Price
          description: The price of the product.
          nullable: true
        sku:
          type: string
          example: MBP123
          title: Product SKU
          description: The stock keeping unit of the product.
          nullable: true
        inventory_quantity:
          type: string
          example: '10'
          title: Inventory Quantity
          description: The quantity of the product in stock.
          nullable: true
        images:
          type: array
          items:
            type: object
            x-apideck-strict-required:
              - url
            properties:
              id:
                $ref: '#/components/schemas/IdOrNull'
              url:
                type: string
                example: https://example.com/macbook-pro.jpg
                title: Image URL
                description: The URL of an image of the product.
                nullable: true
          title: Product Images
          description: An array of image URLs for the product.
          nullable: true
        weight:
          type: string
          example: '1.25'
          title: Product Weight
          description: The weight of the product.
          nullable: true
        weight_unit:
          type: string
          example: lb
          title: Weight Unit
          description: The unit of measurement for the weight of the product.
          nullable: true
        options:
          type: array
          items:
            type: object
            x-apideck-strict-required:
              - name
              - values
            properties:
              id:
                type: string
                example: '1'
                title: Option ID
                description: A unique identifier for the option of the product.
                nullable: true
              name:
                type: string
                example: Color
                title: Option Name
                description: The name of the option for the product.
                nullable: true
              values:
                type: array
                items:
                  type: string
                  example: Red
                  title: Option Values
                  description: The possible values of the option for the product.
                  nullable: true
          title: Product Options
          description: An array of options for the product.
        variants:
          type: array
          items:
            type: object
            x-apideck-strict-required:
              - id
              - name
              - price
              - options
            properties:
              id:
                type: string
                example: '1'
                title: Variant ID
                description: A unique identifier for the variant of the product.
                nullable: true
              name:
                type: string
                example: Midnight 16inch MacBook Pro
                title: Variant Name
                description: The name for the variant, used for displaying to customers.
                nullable: true
              price:
                type: string
                example: '1999.99'
                title: Variant Price
                description: The price of the variant.
                nullable: true
              sku:
                type: string
                example: MBP123-16GB-SILVER-13
                title: Variant SKU
                description: The stock keeping unit of the variant.
                nullable: true
              inventory_quantity:
                type: string
                example: '5'
                title: Inventory Quantity
                description: The quantity of the variant in stock.
                nullable: true
              weight:
                type: string
                example: '1.25'
                title: Weight
                description: The weight of the variant.
                nullable: true
              weight_unit:
                type: string
                example: lb
                title: Weight Unit
                description: The unit of measurement for the weight of the variant.
                nullable: true
              options:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: '1'
                      title: Option ID
                      description: A unique identifier for the option of the variant.
                      nullable: true
                    name:
                      type: string
                      example: Color
                      title: Option Name
                      description: The name of the option for the variant.
                      nullable: true
                    value:
                      type: string
                      example: Silver
                      title: Option Value
                      description: The value of the option for the variant.
                      nullable: true
              images:
                type: array
                items:
                  type: object
                  x-apideck-strict-required:
                    - url
                  properties:
                    id:
                      $ref: '#/components/schemas/IdOrNull'
                    url:
                      type: string
                      example: https://example.com/macbook-pro.jpg
                      title: Image URL
                      description: The URL of an image of the variant.
                      nullable: true
        tags:
          type: array
          items:
            type: string
            example: Apple
            nullable: true
          title: Product Tags
          description: An array of tags for the product, used for organization and searching.
        categories:
          type: array
          items:
            type: object
            x-apideck-strict-required:
              - name
            properties:
              id:
                $ref: '#/components/schemas/IdOrNull'
              name:
                type: string
                example: Laptops
                title: Product Category Name
                description: The name of the category.
                nullable: true
          title: Product Categories
          description: An array of categories for the product, used for organization and searching.
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    EcommerceStore:
      type: object
      x-apideck-schema-id: EcommerceStore
      additionalProperties: false
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          title: Store name
          description: The store's name
          example: My Store
          nullable: true
        store_url:
          type: string
          title: Store URL
          description: The store's website URL
          format: uri
          pattern: ^https?://
          example: https://mybrand.com/shop
          nullable: true
        admin_url:
          type: string
          title: Store Admin URL
          description: The store's admin login URL
          format: uri
          pattern: ^https?://
          example: https://mybrand.com/admin
          nullable: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    EcommerceEventType:
      type: string
      x-apideck-enum-id: ecommerce.events
      enum:
        - '*'
        - ecommerce.order.created
        - ecommerce.order.updated
        - ecommerce.order.deleted
        - ecommerce.product.created
        - ecommerce.product.updated
        - ecommerce.product.deleted
        - ecommerce.customer.created
        - ecommerce.customer.updated
        - ecommerce.customer.deleted
    EcommerceWebhookEvent:
      x-sdk-exclude: true
      allOf:
        - type: object
          x-apideck-schema-id: WebhookEvent
          properties:
            event_id:
              type: string
              description: Unique reference to this request event
              example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
            unified_api:
              description: Name of Apideck Unified API
              x-apideck-enum-id: unified_api
              enum:
                - accounting
                - ats
                - calendar
                - crm
                - csp
                - customer-support
                - ecommerce
                - email
                - email-marketing
                - expense-management
                - file-storage
                - form
                - hris
                - lead
                - payroll
                - pos
                - procurement
                - project-management
                - script
                - sms
                - spreadsheet
                - team-messaging
                - issue-tracking
                - time-registration
                - transactional-email
                - vault
                - data-warehouse
              example: crm
              type: string
            service_id:
              type: string
              description: Service provider identifier
              example: close
            consumer_id:
              type: string
              example: test_consumer_id
              description: Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.
            entity_id:
              type: string
              description: The service provider's ID of the entity that triggered this event
              example: 123456ASDF
            entity_type:
              type: string
              description: The type entity that triggered this event
              example: Company
            entity_url:
              type: string
              description: The url to retrieve entity detail.
              example: https://unify.apideck.com/crm/contacts/123456
            execution_attempt:
              type: number
              description: The current count this request event has been attempted
              example: 2
            occurred_at:
              type: string
              description: ISO Datetime for when the original event occurred
              example: '2021-10-01T03:14:55.419Z'
        - type: object
          properties:
            event_type:
              $ref: '#/components/schemas/EcommerceEventType'
    Email:
      type: object
      x-apideck-schema-id: Email
      required:
        - email
      additionalProperties: false
      x-apideck-weights:
        email: critical
        type: critical
        id: edge-case
      properties:
        id:
          type: string
          example: '123'
          description: Unique identifier for the email address
          nullable: true
        email:
          type: string
          format: email
          description: Email address
          example: elon@musk.com
          minLength: 1
          nullable: true
        type:
          type: string
          description: Email type
          x-apideck-enum-id: emails.type
          enum:
            - primary
            - secondary
            - work
            - personal
            - billing
            - other
          example: primary
          nullable: true
    FirstName:
      type: string
      title: First name
      description: The first name of the person.
      example: Elon
      nullable: true
    Gender:
      type: string
      x-apideck-enum-id: genders
      title: Gender
      description: The gender represents the gender identity of a person.
      enum:
        - male
        - female
        - unisex
        - other
        - not_specified
      example: male
      nullable: true
    GetEcommerceCustomerResponse:
      type: object
      x-apideck-schema-id: GetEcommerceCustomerResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: customers
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/EcommerceCustomer'
        _raw:
          $ref: '#/components/schemas/Raw'
    GetEcommerceCustomersResponse:
      type: object
      x-apideck-schema-id: GetEcommerceCustomersResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: customers
        operation:
          type: string
          description: Operation performed
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceCustomer'
        _raw:
          $ref: '#/components/schemas/Raw'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetEcommerceOrderResponse:
      type: object
      x-apideck-schema-id: GetEcommerceOrderResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: orders
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/EcommerceOrder'
        _raw:
          $ref: '#/components/schemas/Raw'
    GetEcommerceOrdersResponse:
      type: object
      x-apideck-schema-id: GetEcommerceOrdersResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: orders
        operation:
          type: string
          description: Operation performed
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceOrder'
        _raw:
          $ref: '#/components/schemas/Raw'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetProductResponse:
      type: object
      x-apideck-schema-id: GetProductResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: products
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/EcommerceProduct'
        _raw:
          $ref: '#/components/schemas/Raw'
    GetProductsResponse:
      type: object
      x-apideck-schema-id: GetProductsResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: products
        operation:
          type: string
          description: Operation performed
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceProduct'
        _raw:
          $ref: '#/components/schemas/Raw'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetStoreResponse:
      type: object
      x-apideck-schema-id: GetStoreResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: stores
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/EcommerceStore'
        _raw:
          $ref: '#/components/schemas/Raw'
    GetStoresResponse:
      type: object
      x-apideck-schema-id: GetStoresResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: stores
        operation:
          type: string
          description: Operation performed
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceStore'
        _raw:
          $ref: '#/components/schemas/Raw'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    Id:
      type: string
      title: ID
      description: A unique identifier for an object.
      example: '12345'
      readOnly: true
    IdOrNull:
      type: string
      title: ID
      description: A unique identifier for an object.
      example: '12345'
      readOnly: true
      nullable: true
    Language:
      type: string
      example: EN
      description: language code according to ISO 639-1. For the United States - EN
      nullable: true
    LastName:
      type: string
      title: Last name
      description: The last name of the person.
      example: Musk
      nullable: true
    LinkedEcommerceCustomer:
      type: object
      x-apideck-schema-id: LinkedEcommerceCustomer
      title: LinkedEcommerceCustomer
      description: The customer this entity is linked to.
      x-apideck-weights:
        id: critical
        first_name: medium
        last_name: medium
        company_name: medium
        emails: medium
        phone_numbers: medium
      required:
        - id
      x-apideck-strict-required:
        - emails
      x-apideck-strict-any-of:
        - required:
            - name
            - first_name
            - last_name
        - required:
            - company_name
      additionalProperties: false
      properties:
        id:
          type: string
          title: Customer ID
          description: The ID of the customer this entity is linked to.
          example: '12345'
          nullable: true
        name:
          type: string
          example: John Doe
          title: Full Name
          description: Full name of the customer
          nullable: true
        first_name:
          type: string
          example: John
          title: First Name
          description: First name of the customer
          nullable: true
        last_name:
          type: string
          example: Doe
          title: Last Name
          description: Last name of the customer
          nullable: true
        company_name:
          type: string
          example: Acme Inc.
          title: Company Name
          description: Company name of the customer
          nullable: true
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
    LinkedEcommerceOrder:
      type: object
      x-apideck-schema-id: LinkedEcommerceOrder
      title: LinkedEcommerceOrder
      description: The order this entity is linked to.
      x-apideck-weights:
        id: critical
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/Id'
        total:
          type: string
          example: '199.99'
          title: Order Total
          description: The total amount of the order.
          nullable: true
        status:
          $ref: '#/components/schemas/EcommerceOrderStatus'
    Links:
      type: object
      x-apideck-schema-id: Links
      description: Links to navigate to previous or next pages through the API
      properties:
        previous:
          type: string
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
          nullable: true
        current:
          type: string
          description: Link to navigate to the current page through the API
          example: https://unify.apideck.com/crm/companies
        next:
          type: string
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          nullable: true
    Meta:
      type: object
      x-apideck-schema-id: Meta
      description: Response metadata
      properties:
        items_on_page:
          type: integer
          description: Number of items returned in the data property of the response
          example: 50
        cursors:
          type: object
          description: Cursors to navigate to previous or next pages through the API
          properties:
            previous:
              type: string
              description: Cursor to navigate to the previous page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
            current:
              type: string
              description: Cursor to navigate to the current page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
            next:
              type: string
              description: Cursor to navigate to the next page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
    MiddleName:
      type: string
      title: Middle name
      description: Middle name of the person.
      example: D.
      nullable: true
    NotFoundResponse:
      type: object
      x-apideck-schema-id: NotFound
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 404
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Found
        type_name:
          type: string
          description: The type of error returned
          example: EntityNotFoundError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: "Could not find widget with id: '123'"
            - type: object
              x-speakeasy-detail: true
              example:
                not_found:
                  entity: widget
                  id: '123'
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#entitynotfounderror
    NotImplementedResponse:
      type: object
      x-apideck-schema-id: NotImplemented
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 501
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Implemented
        type_name:
          type: string
          description: The type of error returned
          example: MappingError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.OAuth2.flows'
            - type: object
              x-speakeasy-detail: true
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#mappingerror
    PassThroughBody:
      type: array
      description: The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
      items:
        type: object
        properties:
          service_id:
            type: string
            description: Identifier for the service to which this pass_through should be applied.
          operation_id:
            type: string
            description: Optional identifier for a workflow operation to which this pass_through should be applied. This is useful for Unify calls that are making more than one downstream request.
          extend_object:
            type: object
            additionalProperties: true
            description: Simple object allowing any properties for direct extension.
          extend_paths:
            type: array
            description: Array of objects for structured data modifications via paths.
            items:
              type: object
              properties:
                path:
                  type: string
                  description: JSONPath string specifying where to apply the value.
                  example: $.nested.property
                value:
                  description: The value to set at the specified path, can be any type.
                  example:
                    TaxClassificationRef:
                      value: EUC-99990201-V1-00020000
              required:
                - path
                - value
              additionalProperties: false
        required:
          - service_id
        additionalProperties: false
        writeOnly: true
    PassThroughQuery:
      type: object
      additionalProperties: true
      properties:
        example_downstream_property:
          type: string
          description: All passthrough query parameters are passed along to the connector as is (?pass_through[search]=leads becomes ?search=leads)
      example:
        search: San Francisco
    PaymentRequiredResponse:
      type: object
      x-apideck-schema-id: PaymentRequired
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 402
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Payment Required
        type_name:
          type: string
          description: The type of error returned
          example: RequestLimitError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
          x-speakeasy-error-message: true
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: You have reached your limit of 2000
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestlimiterror
    PaymentUnit:
      type: string
      title: Payment Unit
      description: Unit of measurement for employee compensation.
      x-apideck-enum-id: payment_unit
      enum:
        - hour
        - week
        - month
        - year
        - paycheck
        - other
      example: year
      nullable: true
    PhoneNumber:
      type: object
      x-apideck-schema-id: PhoneNumber
      required:
        - number
      additionalProperties: false
      x-apideck-weights:
        number: critical
        type: critical
        id: edge-case
        country_code: edge-case
        area_code: edge-case
        extension: edge-case
      properties:
        id:
          type: string
          description: Unique identifier of the phone number
          example: '12345'
          nullable: true
        country_code:
          title: Country code
          description: The country code of the phone number, e.g. +1
          type: string
          example: '1'
          nullable: true
        area_code:
          title: Area code
          description: The area code of the phone number, e.g. 323
          type: string
          example: '323'
          nullable: true
        number:
          type: string
          title: Phone number
          description: The phone number
          example: 111-111-1111
          minLength: 1
        extension:
          type: string
          title: Phone extension
          description: The extension of the phone number
          example: '105'
          nullable: true
        type:
          type: string
          description: The type of phone number
          x-apideck-enum-id: phone_numbers.type
          enum:
            - primary
            - secondary
            - home
            - work
            - office
            - mobile
            - assistant
            - fax
            - direct-dial-in
            - personal
            - other
          example: primary
          nullable: true
    PhotoUrl:
      type: string
      title: Photo URL
      description: The URL of the photo of a person.
      example: https://unavatar.io/elon-musk
      nullable: true
    RowVersion:
      type: string
      title: Row version
      description: A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
      example: 1-12345
      nullable: true
    CustomMappings:
      type: object
      x-apideck-schema-id: CustomMappings
      description: When custom mappings are configured on the resource, the result is included here.
      nullable: true
      readOnly: true
    Title:
      type: string
      title: Job title
      description: The job title of the person.
      example: CEO
      nullable: true
    TooManyRequestsResponse:
      type: object
      x-apideck-schema-id: TooManyRequests
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 429
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
          example: Too Many Requests
        type_name:
          type: string
          description: The type of error returned
          example: ConnectorRateLimitError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Connector Rate Limit Error
          x-speakeasy-error-message: true
        detail:
          type: object
          properties:
            context:
              type: string
            error:
              type: object
              x-speakeasy-detail: true
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#connectorratelimiterror
    TrackingItem:
      type: object
      title: Ecommerce Order Tracking Item
      description: Represents the tracking information associated with an ecommerce order.
      x-apideck-schema-id: EcommerceOrderLineItem
      x-apideck-weights:
        provider: high
        number: critical
        url: medium
        updated_at: medium
      required:
        - provider
        - number
      x-apideck-strict-required:
        - provider
        - number
      properties:
        provider:
          title: Provider
          type: string
          description: The name or code of the carrier or shipping company that is handling the shipment.
          example: UPS
          nullable: true
        number:
          title: Tracking number
          type: string
          description: ' The tracking number associated with the shipment, which can be used to track the progress of the delivery.'
          example: 1Z9999999999999999
          nullable: true
        url:
          title: Tracking url
          type: string
          description: The URL of the carrier's tracking page, which can be used to view detailed information about the shipment's progress.
          example: https://www.ups.com/track?tracknum=1Z9999999999999999
          nullable: true
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    UnauthorizedResponse:
      type: object
      x-apideck-schema-id: Unauthorized
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 401
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unauthorized
        type_name:
          type: string
          description: The type of error returned
          example: UnauthorizedError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: Missing authentication
            - type: object
              x-speakeasy-detail: true
              example:
                statusCode: 401
                error: Unauthorized
                message: Missing authentication
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
    UnexpectedErrorResponse:
      type: object
      x-apideck-schema-id: Error
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        type_name:
          type: string
          description: The type of error returned
          example: RequestHeadersValidationError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: 'Missing Header: x-apideck-consumer-id'
            - type: object
              x-speakeasy-detail: true
              example:
                missing:
                  - x-apideck-consumer-id: required
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
    UnifiedId:
      title: UnifiedId
      type: object
      x-apideck-schema-id: Id
      description: A object containing a unique identifier for the resource that was created, updated, or deleted.
      required:
        - id
      properties:
        id:
          title: Id
          description: The unique identifier of the resource
          type: string
          readOnly: true
          example: '12345'
    UnprocessableResponse:
      type: object
      x-apideck-schema-id: Unprocessable
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 422
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unprocessable Entity
        type_name:
          type: string
          description: The type of error returned
          example: InvalidStateError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid State
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: Unprocessable request, please verify your request headers and body.
            - type: object
              x-speakeasy-detail: true
              example:
                error: Unprocessable
                message: Unprocessable request, please verify your request headers and body.
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#invalidstateerror
    UpdateEcommerceCustomerResponse:
      type: object
      x-apideck-schema-id: UpdateEcommerceCustomerResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: customers
        operation:
          type: string
          description: Operation performed
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    UpdateEcommerceOrderResponse:
      type: object
      x-apideck-schema-id: UpdateEcommerceOrderResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: orders
        operation:
          type: string
          description: Operation performed
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    UpdateProductResponse:
      type: object
      x-apideck-schema-id: UpdateProductResponse
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: shopify
        resource:
          type: string
          description: Unified API resource name
          example: products
        operation:
          type: string
          description: Operation performed
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
        _raw:
          $ref: '#/components/schemas/Raw'
    UpdatedAt:
      type: string
      title: Updated at (timestamp)
      description: The date and time when the object was last updated.
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      readOnly: true
      nullable: true
    UpdatedBy:
      type: string
      title: Updated by
      description: The user who last updated the object.
      example: '12345'
      readOnly: true
      nullable: true
    Website:
      type: object
      x-apideck-schema-id: Website
      required:
        - url
      additionalProperties: false
      x-apideck-weights:
        url: critical
        type: critical
        id: edge-case
      properties:
        id:
          description: Unique identifier for the website
          type: string
          example: '12345'
          nullable: true
        url:
          description: The website URL
          type: string
          example: http://example.com
          minLength: 1
        type:
          description: The type of website
          type: string
          x-apideck-enum-id: websites.type
          enum:
            - primary
            - secondary
            - work
            - personal
            - other
          example: primary
          nullable: true
    SortDirection:
      type: string
      x-apideck-schema-id: SortDirection
      description: The direction in which to sort the results
      x-apideck-enum-id: sort_direction
      enum:
        - asc
        - desc
      default: asc
    OrdersSort:
      type: object
      x-apideck-schema-id: OrdersSort
      example:
        by: created_at
        direction: desc
      properties:
        by:
          type: string
          x-apideck-enum-id: orders.sort_by
          description: The field on which to sort the Orders
          enum:
            - created_at
            - updated_at
            - name
          example: created_at
        direction:
          $ref: '#/components/schemas/SortDirection'
      additionalProperties: false
    Raw:
      title: raw
      type: object
      x-apideck-schema-id: Raw
      description: Raw response from the integration when raw=true query param is provided
      nullable: true
      additionalProperties: true
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Authorization
      description: |
        To access our API, you need to sign up and obtain your unique API key. Each Unify application is assigned a single API key. You can locate your API key in the Configuration Settings section of your Apideck application. Additionally, your application’s application_id is available on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header.

        - Bearer authorization header: `Authorization: Bearer "YOUR_API_KEY_HERE"`
        - Application id header: `x-apideck-app-id: "YOUR_APP_ID_HERE"`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
security:
  - apiKey: []
tags:
  - name: Orders
    description: ''
    x-apideck-resource-id: orders
    x-apideck-model:
      $ref: '#/components/schemas/EcommerceOrder'
  - name: Products
    description: ''
    x-apideck-resource-id: products
    x-apideck-model:
      $ref: '#/components/schemas/EcommerceProduct'
  - name: Customers
    description: ''
    x-apideck-resource-id: customers
    x-apideck-model:
      $ref: '#/components/schemas/EcommerceCustomer'
  - name: Stores
    description: ''
    x-apideck-resource-id: stores
    x-apideck-model:
      $ref: '#/components/schemas/EcommerceStore'
paths:
  /ecommerce/orders:
    get:
      tags:
        - Orders
      operationId: ordersAll
      summary: List Orders
      description: List Orders
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/ordersFilter'
        - $ref: '#/components/parameters/ordersSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      security:
        - apiKey: []
      x-apideck-gotchas:
        - connector: bigcommerce
          description: In the pagination, the limit value should be in additions of 10. E.g. 10, 20, 30, etc.
        - connector: tiktok
          description: To retrieve customer details, if they are hidden in the order response, use `seller shipping` instead of the default `TikTok shipping` in Tiktok. Please refer to our [integration guide](https://developers.apideck.com/connectors/tiktok/docs/application_owner+oauth_credentials) for more details.
      responses:
        '200':
          $ref: '#/components/responses/GetEcommerceOrdersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.ordersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /ecommerce/orders/{id}:
    get:
      tags:
        - Orders
      operationId: ordersOne
      summary: Get Order
      description: Get Order
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      security:
        - apiKey: []
      x-apideck-gotchas:
        - connector: woocommerce
          description: |
            Woocommerce returns the customer_id as '0' when an order was completed without registration. In this scenario, the customer data on order reflects a 'Guest Checkout'.
      responses:
        '200':
          $ref: '#/components/responses/GetEcommerceOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.ordersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /ecommerce/products:
    get:
      tags:
        - Products
      operationId: productsAll
      summary: List Products
      description: List Products
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      security:
        - apiKey: []
      x-apideck-gotchas:
        - connector: prestashop
          description: 'PrestaShop primarily uses an `id` field to identify product associations (Ie: categories, variants etc). To maintain performance on the list endpoint, fewer properties are returned than other connectors.'
        - connector: bigcommerce
          description: In the pagination, the limit value should be in additions of 10. E.g. 10, 20, 30, etc.
      responses:
        '200':
          $ref: '#/components/responses/GetProductsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.productsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /ecommerce/products/{id}:
    get:
      tags:
        - Products
      operationId: productsOne
      summary: Get Product
      description: Get Product
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      security:
        - apiKey: []
      x-apideck-gotchas:
        - connector: prestashop
          description: Product images for PrestaShop are limited to the default image set on the product.
      responses:
        '200':
          $ref: '#/components/responses/GetProductResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.productsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /ecommerce/customers:
    get:
      tags:
        - Customers
      operationId: customersAll
      summary: List Customers
      description: List Customers
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/customersFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      security:
        - apiKey: []
      x-apideck-gotchas:
        - connector: woocommerce
          description: Woocommerce will only return customers that have placed an order and created and account.
        - connector: bigcommerce
          description: In the pagination, the limit value should be in additions of 10. E.g. 10, 20, 30, etc.
      responses:
        '200':
          $ref: '#/components/responses/GetEcommerceCustomersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.customersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /ecommerce/customers/{id}:
    get:
      tags:
        - Customers
      operationId: customersOne
      summary: Get Customer
      description: Get Customer
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetEcommerceCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.customersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /ecommerce/store:
    get:
      tags:
        - Stores
      operationId: storesOne
      summary: Get Store
      description: Get Store
      parameters:
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetStoreResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.storesOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
x-webhooks:
  x-sdk-exclude: true
  OrderCreated:
    post:
      summary: Order Created
      operationId: orderCreated
      x-apideck-event-type: ecommerce.order.created
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.order.created
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/orders/123456ASDF
                entity_type: order
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when an order has been created.
  OrderUpdated:
    post:
      summary: Order Updated
      operationId: orderUpdated
      x-apideck-event-type: ecommerce.order.updated
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.order.updated
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/orders/123456ASDF
                entity_type: order
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when an order has been updated.
  OrderDeleted:
    post:
      summary: Order Deleted
      operationId: orderDeleted
      x-apideck-event-type: ecommerce.order.deleted
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.order.deleted
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/orders/123456ASDF
                entity_type: order
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when an order has been deleted.
  ProductCreated:
    post:
      summary: Product Created
      operationId: productCreated
      x-apideck-event-type: ecommerce.product.created
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.product.created
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/products/123456ASDF
                entity_type: product
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when a product has been created.
  ProductUpdated:
    post:
      summary: Product Updated
      operationId: productUpdated
      x-apideck-event-type: ecommerce.product.updated
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.product.updated
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/products/123456ASDF
                entity_type: product
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when a product has been updated.
  ProductDeleted:
    post:
      summary: Product Deleted
      operationId: productDeleted
      x-apideck-event-type: ecommerce.product.deleted
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.product.deleted
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/products/123456ASDF
                entity_type: product
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when a product has been deleted.
  CustomerCreated:
    post:
      summary: Customer Created
      operationId: customerCreated
      x-apideck-event-type: ecommerce.customer.created
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.customer.created
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/customers/123456ASDF
                entity_type: customer
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when a customer has been created.
  CustomerUpdated:
    post:
      summary: Customer Updated
      operationId: customerUpdated
      x-apideck-event-type: ecommerce.customer.updated
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.customer.updated
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/customers/123456ASDF
                entity_type: customer
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when a customer has been updated.
  CustomerDeleted:
    post:
      summary: Customer Deleted
      operationId: customerDeleted
      x-apideck-event-type: ecommerce.customer.deleted
      parameters:
        - name: x-apideck-event-type
          in: header
          required: true
          description: The type of event that was triggered
          schema:
            $ref: '#/components/schemas/EcommerceEventType'
        - name: x-apideck-idempotency-key
          in: header
          required: true
          description: An idempotency key is a unique value generated to recognize subsequent retries/duplicates of the same request.
          schema:
            type: string
            format: uuid
            example: d290f1ee-6c54-4b01-90e6-d701748f0851
      tags:
        - Webhook Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/EcommerceWebhookEvent'
            example:
              payload:
                event_type: ecommerce.customer.deleted
                unified_api: ecommerce
                service_id: shopify
                consumer_id: test_user_id
                event_id: d290f1ee-6c54-4b01-90e6-d701748f0851
                entity_id: 123456ASDF
                entity_url: https://unify.apideck.com/ecommerce/customers/123456ASDF
                entity_type: customer
                occurred_at: '2020-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Return a 200 status to indicate that the data was received successfully.
      security: []
      description: Event broadcast when a customer has been deleted.
