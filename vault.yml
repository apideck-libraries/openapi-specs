openapi: 3.0.0
info:
  version: 0.3.0
  title: Vault API
  description: "Welcome to the Vault API \U0001F44B\n\nBuilding integrations starts with handling user credentials and generating access tokens for the APIs you want to use.\n\nWhen you're looking to connect to an API, the first step is authentication.\nVault helps you store API keys and access tokens from customers.\n\nThe only thing you need to use the Unify APIs is the consumer id, and Vault will do the look-up in the background to perform the API call(s), adding an extra layer of protection to prevent access token leakage.\n\nEasily import the Vault API into your favorite API tool by using the buttons below.\n\n[![Run our Vault API in Postman](https://app.apideck.com/images/postman-button.svg)](https://www.postman.com/apideck/workspace/unified-apis/overview)\n\n[![Run our Vault API in Insomnia}](https://app.apideck.com/images/insomnia-button.svg)](https://insomnia.rest/run/?label=Apideck%20Vault%20API&uri=https%3A%2F%2Fspecs.apideck.com%2Fvault.yml)\n\n## Why Apideck Vault\n\nThe Vault API allows you to build your own integrations UI, so your customers can activate and configure integrations.\n\nThrough the API, your customers authenticate directly in your app, where Vault will still take care of redirecting to the auth provider and back to your app. This strategy gives you full control over the flow and look & feel of the integration experience.\n\nThrough the Unify dashboard, you can configure which connectors you want to support as integrations, and it also allows you to control which kinds of providers your application supports\n\nAlternatively, you can use the Hosted Vault, a no-code solution.\n\n## Get Started\n\nTo use the Apideck APIs, you need to first sign up for free at [https://app.apideck.com/signup](). Follow the steps below to get started.\n\n- Create a free account.\n- Sign in to the Apideck Unify Dashboard.\n- Get your API key and the application ID.\n- Select and configure the integrations you want to make available to your users\n- Retrieve the client_id and client_secret for the integration you want to activate (Only needed for OAuth integrations). You can skip this step by using the Apideck sandbox credentials to get you started. (GUIDES per service coming soon)\n- Register the redirect URI for the example app (https://unify.apideck.com/vault/callback) in the list of redirect URIs under your app's settings\n\n### Vault API\n\nIf you are building your integration settings UI manually, you can call the Vault API directly.\nThe Vault API is for companies who want to completely whitelabel the in-app integrations overview and authentication experience.\nThrough the API, your customers authenticate directly in your app where Vault will still take care of redirecting to the auth provider and back to your app.\nThis strategy gives you full control over the flow and look & feel of the integration experience.\nThrough the Unify dashboard you can configure which connectors you want to support as integrations. and also allows you to control which kinds of providers your application supports.\n\nIf you're already storing access tokens we will help you migrate through our Vault Migration API.\n\nBeware, this is strategy takes more time to implement and is more complex than the hosted vault strategy.\n\n### Hosted Vault\n\nHosted Vault is a simple no-code solution, so you don't need to build your own UI to handle the integration settings and authentication. It's a great way to explore Unify without needing to build an integrations overview to get started.\n\n![Hosted Vault - Integrations portal](https://app.apideck.com/images/hosted-vault.png)\n\nBehind the scenes Hosted Vault implements the Vault API endpoints and handles the following features for your customers:\n\n- Add a connection (for an integration)\n- Handle the OAuth flow\n- Configure connection settings per integration\n- Manage connections\n- Discover and propose integration options\n\n## Domain model\n\nAt its core, a domain model creates a web of interconnected entities.\n\nOur domain model contains five main entity types: Consumer (user, account, team, machine), Application, Connector, Integration, and Connection.\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-app-id      | String  | Yes      | The id of your Unify application. Available at https://app.apideck.com/api-keys.                                                                               |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n\n## Authorization\n\nYou can interact with the API through the authorization methods below.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Connectors\n\nA full list of what vendors require which auth flow:\n\n| Service                                                                                    | Service ID         | Auth Type  | Status |\n| ------------------------------------------------------------------------------------------ | ------------------ | ---------- | ------ |\n| **[ActiveCampaign](https://developers.apideck.com/connectors/activecampaign)**             | activecampaign     | API Key    | ✅      |\n| **[Albacross](https://developers.apideck.com/connectors/albacross)**                       | albacross          | None       | ✅      |\n| **[Close](https://developers.apideck.com/connectors/close)**                               | close              | API Key    | ✅      |\n| **[Copper](https://developers.apideck.com/connectors/copper)**                             | copper             | API Key    | ✅      |\n| **[Crisp](https://developers.apideck.com/connectors/crisp)**                               | crisp              | None       | ✅      |\n| **[Drift](https://developers.apideck.com/connectors/drift)**                               | drift              | None       | ✅      |\n| **[Exact Online](https://developers.apideck.com/connectors/exact-online)**                 | exact-online       | OAuth2     | ✅      |\n| **[Freshsales](https://developers.apideck.com/connectors/freshsales)**                     | freshsales         | API Key    | ✅      |\n| **[Google Analytics](https://developers.apideck.com/connectors/google-analytics)**         | google-analytics   | None       | ✅      |\n| **[Google Tag Manager](https://developers.apideck.com/connectors/google-tag-manager)**     | google-tag-manager | None       | ✅      |\n| **[HubSpot](https://developers.apideck.com/connectors/hubspot)**                           | hubspot            | OAuth2     | ✅      |\n| **[Iubenda](https://developers.apideck.com/connectors/iubenda)**                           | iubenda            | None       | ✅      |\n| **[journy.io](https://developers.apideck.com/connectors/journy-io)**                       | journy-io          | None       | ✅      |\n| **[Livechat](https://developers.apideck.com/connectors/livechat)**                         | livechat           | None       | ✅      |\n| **[Metomic](https://developers.apideck.com/connectors/metomic-io)**                        | metomic-io         | None       | ✅      |\n| **[Microsoft Dynamics CRM](https://developers.apideck.com/connectors/microsoft-dynamics)** | microsoft-dynamics | OAuth2     | ✅      |\n| **[Pipedrive](https://developers.apideck.com/connectors/pipedrive)**                       | pipedrive          | OAuth2     | ✅      |\n| **[Plivo](https://developers.apideck.com/connectors/plivo)**                               | plivo              | Basic Auth | ✅      |\n| **[Quickbooks](https://developers.apideck.com/connectors/quickbooks)**                     | quickbooks         | OAuth2     | ✅      |\n| **[Salesflare](https://developers.apideck.com/connectors/salesflare)**                     | salesflare         | API Key    | ✅      |\n| **[Salesforce](https://developers.apideck.com/connectors/salesforce)**                     | salesforce         | OAuth2     | ✅      |\n| **[Segment](https://developers.apideck.com/connectors/segment)**                           | segment            | None       | ✅      |\n| **[Slack](https://developers.apideck.com/connectors/slack)**                               | slack              | OAuth2     | ✅      |\n| **[Teamleader](https://developers.apideck.com/connectors/teamleader)**                     | teamleader         | OAuth2     | ✅      |\n| **[Twilio](https://developers.apideck.com/connectors/twilio)**                             | twilio             | Basic Auth | ✅      |\n| **[Xero](https://developers.apideck.com/connectors/xero)**                                 | xero               | OAuth2     | ✅      |\n| **[Zendesk Sell](https://developers.apideck.com/connectors/zendesk-sell)**                 | zendesk-sell       | OAuth2     | ✅      |\n| **[Zoho CRM](https://developers.apideck.com/connectors/zoho-crm)**                         | zoho-crm           | OAuth2     | ✅      |\n\n## Sandbox (upcoming)\n\nThe sandbox is pre-loaded with data similar to a real-life integrations setup. You can use the preconfigured OAauth configured connectors for testing purposes and can skip this step by using the Apideck sandbox credentials to get you started.\n\n## Guides\n\n- How to build an integrations UI with Vault (https://github.com/apideck-samples/integration-settings)\n- How to configure the OAuth credentials for integration providers (COMING SOON)\n\n## FAQ\n\n**What purpose does Vault serve? Can I just handle the authentication and access token myself?**\nYou can store everything yourself, but that defeats the purpose of using Apideck Unify. Handling tokens for multiple providers can quickly become very complex.\n\n### Is my data secure?\n\nVault employs data minimization, therefore only requesting the minimum amount of scopes needed to perform an API request.\n\n### How do I migrate existing data?\n\nUsing our migration API, you can migrate the access tokens and accounts to Apideck Vault. (COMING SOON)\n\n### Can I use Vault in combination with existing integrations?\n\nYes, you can. The granularity of Unify allows to quickly the use cases you need, while keeping a gradual migration path based on your timeline and requirements.\n\n### How does Vault work for Apideck Ecosystem customers?\n\nOnce logged in, pick your ecosystem; on the left-hand side of the screen, you'll have the option to create an application underneath the Unify section.\n\n### How to integrate Apideck Vault\n\nThis section covers everything you need to know to authenticate your customers through Vault.\nVault provides **three strategies** to use API tokens from your customers:\n\n- Vault API\n- Hosted Vault\n- Apideck Ecosystem _(COMING SOON)_\n\nYou can also opt to bypass Vault and still take care of authentication flows yourself. Make sure to put the right safeguards in place to protect your customers' tokens and other sensitive data.\n\n### What auth types does Vault support?\n\nWhat auth strategies does Vault handle? We currently support two flows so your customers can activate an integration.\n\n#### API keys\n\nFor Services supporting the API key strategy, you will need to provide an in-app form where users can configure their API keys provided by the integration service. You can also use the drop-in solution if you don't want your own integration settings overview.\n\n#### OAuth 2.0\n\n##### Authorization Code Grant Type Flow\n\nVault handles the complete Authorization Code Grant Type Flow for you. This flow only supports browser-based (passive) authentication because most identity providers don't allow entering a username and password to be entered into applications that they don't own.\n\nCertain connectors require an OAuth redirect authentication flow, where the end-user is redirected to the provider's website or mobile app to authenticate.\n\nThis is being handled by the `/authorize` endpoint.\n"
  contact:
    email: hello@apideck.com
    url: 'https://developers.apideck.com'
  x-logo:
    url: 'https://developers.apideck.com/icon.png'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://unify.apideck.com'
    description: Production server
tags:
  - name: Sessions
    description: ''
  - name: Connections
    description: ''
  - name: Proxy
    description: ''
components:
  parameters:
    id:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: ID of the record you are acting upon.
    x-apideck-app-id:
      name: x-apideck-app-id
      in: header
      description: The ID of your Unify application
      schema:
        type: string
    x-apideck-consumer-id:
      name: x-apideck-consumer-id
      in: header
      description: ID of the consumer which you want to get or push data from
      schema:
        type: string
    x-apideck-service-id:
      name: x-apideck-service-id
      in: header
      description: 'Provide the service id you want to call (e.g., pipedrive). See the full list in the connector section. Only needed when a consumer has activated multiple integrations for a Unified API.'
      schema:
        type: string
    unified_api:
      name: unified_api
      in: path
      required: true
      description: Unified API
      schema:
        type: string
      example: crm
    service_id:
      name: service_id
      in: path
      description: Service ID of the resource to return
      required: true
      schema:
        type: string
      example: pipedrive
    application_id:
      name: application_id
      in: path
      description: Application ID of the resource to return
      required: true
      schema:
        type: string
    x-apideck-downstream-url:
      name: x-apideck-downstream-url
      in: header
      description: Downstream URL
      example: 'https://api.twilio.com'
      required: true
      schema:
        type: string
    x-apideck-downstream-method:
      name: x-apideck-downstream-method
      in: header
      description: 'Downstream method. If not provided the upstream method will be inherited,'
      example: POST
      required: false
      schema:
        type: string
    x-apideck-downstream-authorization:
      name: x-apideck-downstream-authorization
      in: header
      description: Downstream authorization header. This will skip the Vault token injection.
      example: Bearer XXXXXXXXXXXXXXXXX
      required: false
      schema:
        type: string
    api:
      name: api
      in: query
      description: Scope results to Unified API
      schema:
        type: string
      example: crm
    resource:
      name: resource
      in: path
      required: true
      description: Resource Name
      schema:
        type: string
      example: leads
    raw:
      name: raw
      in: query
      description: Include raw response. Mostly used for debugging purposes
      schema:
        type: boolean
        default: true
    redirect_uri:
      name: redirect_uri
      in: query
      description: URL to redirect back to after authorization. When left empty the default configured redirect uri will be used.
      required: true
      schema:
        type: string
      example: 'https://yoursaasapp.com/integrations'
    state:
      name: state
      in: query
      description: An opaque value the applications adds to the initial request that the authorization server includes when redirecting the back to the application. This value must be used by the application to prevent CSRF attacks.
      required: true
      schema:
        type: string
    configured:
      name: configured
      in: query
      description: Scopes results to connections that have been configured or not
      schema:
        type: boolean
      example: true
  schemas:
    Connection:
      type: object
      properties:
        id:
          type: string
          example: lead+close
          readOnly: true
        service_id:
          type: string
          example: salesforce
        name:
          type: string
          example: Salesforce
        tag_line:
          type: string
          example: 'CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.'
        unified_api:
          type: string
          example: crm
        website:
          type: string
          example: 'https://www.salesforce.com'
        icon:
          type: string
          example: 'https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png'
        logo:
          type: string
          example: 'https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg'
        api_key:
          type: string
          description: API Key. Only valid when auth_type is `apiKey`. OAuth connections do not require `api_key`.
          nullable: true
          example: 820b4ce9-b66d-4d12-9562-c859f2a6bf39
        settings:
          type: object
          description: Connection settings. Values will persist to `form_fields` with corresponding id
          nullable: true
          example:
            instance_url: 'https://eu28.salesforce.com'
            <setting-key>: <setting-value>
        metadata:
          type: object
          properties:
            ecosystem:
              $ref: '#/components/schemas/Connection/properties/metadata/properties/account'
            account:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
          nullable: true
          example:
            ecosystem:
              name: My Ecosystem
              id: a6469332-7948-46a6-abc2-87ba3f005025
            account:
              name: My Company
              id: c01458a5-7276-41ce-bc19-639906b0450a
        auth_type:
          type: string
          enum:
            - oauth2
            - apiKey
            - basic
          nullable: true
        status:
          type: string
          enum:
            - live
            - upcoming
            - requested
        form_fields:
          type: array
          items:
            $ref: '#/components/schemas/FormField'
          example:
            - id: instance_url
              label: Instance url
              value: 'https://eu28.salesforce.com'
              placeholder: ''
              mask: false
              type: text
              required: true
              disabled: false
              custom_field: false
        configuration:
          type: array
          items:
            type: object
            properties:
              resource:
                type: string
                example: leads
              defaults:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: ProductInterest
                    value:
                      anyOf:
                        - type: string
                          example: GC5000 series
                        - type: integer
                          example: 10
                        - type: number
                          example: 10.5
                        - type: boolean
                          example: true
                        - type: array
                          items:
                            anyOf:
                              - type: string
                                example: GC6000 series
                              - type: integer
                                example: 10
                              - type: number
                                example: 10.5
        configurable_resources:
          type: array
          items:
            type: string
          example:
            - opportunities
            - companies
            - contacts
            - leads
        settings_required_for_authorization:
          type: array
          items:
            type: string
          example:
            - instance_url
        authorize_url:
          type: string
          example: 'https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>'
        revoke_url:
          type: string
          nullable: true
          example: 'https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>'
        added:
          type: boolean
          example: true
        enabled:
          type: boolean
          example: true
        created_at:
          type: number
          example: 1615563533390
        updated_at:
          type: number
          example: 1616662325753
        state:
          type: string
          enum:
            - available
            - callable
            - added
            - configured
            - authorized
          example: authorized
    Session:
      type: object
      properties:
        session_uri:
          type: string
          example: 'http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj'
    SessionRequest:
      type: object
      properties:
        redirect_uri:
          type: string
          example: 'https://mysaas.com/dashboard'
        consumer_metadata:
          type: object
          properties:
            account_name:
              type: string
              example: SpaceX
            user_name:
              type: string
              example: Elon Musk
            image:
              type: string
              example: 'https://www.spacex.com/static/images/share.jpg'
        theme:
          type: object
          properties:
            vault_name:
              type: string
              example: Intercom
            primary_color:
              type: string
              example: '#286efa'
            sidepanel_background_color:
              type: string
              example: '#286efa'
            sidepanel_text_color:
              type: string
              example: '#FFFFFF'
            favicon:
              type: string
              example: 'https://www.intercom.com/_next/static/images/favicon-348ad8df6c167d93fb894e8bcb4dcd2a.png'
            terms_url:
              type: string
              example: 'https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e'
            privacy_url:
              type: string
              example: 'https://compliance.apideck.com/privacy-policy'
    FormField:
      type: object
      properties:
        id:
          type: string
          example: channel
        label:
          type: string
          example: Channel
        placeholder:
          type: string
          example: Select a channel
          nullable: true
        description:
          type: string
          example: Slack channel to push notification to
          nullable: true
        type:
          enum:
            - text
            - checkbox
            - tel
            - email
            - url
            - textarea
            - select
            - multi-select
            - datetime
            - date
            - time
            - number
        required:
          type: boolean
        custom_field:
          type: boolean
        disabled:
          type: boolean
          nullable: true
        options:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
                example: General Channel
              value:
                anyOf:
                  - type: string
                    example: general
                  - type: integer
                    example: 123
                  - type: number
                    example: 12.5
                  - type: boolean
                    example: true
                  - type: array
                    items:
                      anyOf:
                        - type: string
                        - type: integer
                        - type: number
                    example:
                      - team
                      - general
    GetConnectionResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          properties:
            data:
              $ref: '#/components/schemas/Connection'
    GetConnectionsResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
    UpdateConnectionRequestBody:
      type: object
      properties:
        enabled:
          $ref: '#/components/schemas/Connection/properties/enabled'
        api_key:
          $ref: '#/components/schemas/Connection/properties/api_key'
        settings:
          $ref: '#/components/schemas/Connection/properties/settings'
        metadata:
          $ref: '#/components/schemas/Connection/properties/metadata'
      additionalProperties: false
    UpdateConnectionResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          $ref: '#/components/schemas/Connection'
    CreateSessionResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          properties:
            data:
              $ref: '#/components/schemas/Session'
    Created:
      type: object
      required:
        - ''
      properties: {}
    NotFoundResponse:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 404
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Found
        typeName:
          type: string
          description: The type of error returned
          example: EntityNotFoundError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: "Could not find widget with id: '123'"
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#entitynotfounderror'
    Unauthorized:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 401
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unauthorized
        typeName:
          type: string
          description: The type of error returned
          example: UnauthorizedError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
        detail:
          anyOf:
            - type: string
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: Failed to generate valid JWT Session. Verify applicationId is correct
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#unauthorizederror'
    Unprocessable:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 422
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unprocessable Entity
        typeName:
          type: string
          description: The type of error returned
          example: InvalidStateError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid State
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: State did not include unified_api
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#invalidstateerror'
    BadRequest:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        typeName:
          type: string
          description: The type of error returned
          example: MissingHeadersError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
        detail:
          anyOf:
            - type: string
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occured.
          example:
            missing:
              - - foobar: required
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#missingheaderserror'
    PaymentRequired:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 402
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Payment Required
        typeName:
          type: string
          description: The type of error returned
          example: RequestLimitError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: You have reached your limit of 2000
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#requestlimiterror'
    NotImplemented:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 501
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Implemented
        typeName:
          type: string
          description: The type of error returned
          example: MappingError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
        detail:
          anyOf:
            - type: string
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#mappingerror'
    UnexpectedError:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        typeName:
          type: string
          description: The type of error returned
          example: MissingHeadersError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
        detail:
          anyOf:
            - type: string
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: 'Missing Header: x-apideck-consumer-id'
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#unauthorizederror'
  requestBodies:
    UpdateConnectionRequestBody:
      description: Fields to be updated on the resource
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConnectionRequestBody'
  responses:
    GetConnection:
      description: Connection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectionResponse'
    GetConnections:
      description: All Connections
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectionsResponse'
    UpdateConnection:
      description: Connection updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConnectionResponse'
    CreateSession:
      description: Session created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSessionResponse'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
    Unprocessable:
      description: Unprocessable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unprocessable'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    PaymentRequired:
      description: Payment Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequired'
    NotImplemented:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotImplemented'
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedError'
    Ok:
      description: Ok
      content:
        application/json:
          schema: {}
          example: {}
    NoContent:
      description: No content
      content:
        application/json:
          schema: {}
          example: {}
    Created:
      description: Resource created
      content:
        application/json:
          schema: {}
          example: {}
    Updated:
      description: Resource updated
      content:
        application/json:
          schema: {}
          example: {}
    Deleted:
      description: Resource succesfully deleted
      content:
        application/json:
          schema: {}
          example: {}
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
      description: |
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. 
        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.
        Your Apideck application_id can also be found on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header. 

        - Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    applicationId:
      type: apiKey
      in: header
      name: x-apideck-app-id
      description: The ID of your Unify application
security:
  - apiKey: []
    applicationId: []
paths:
  /vault/connections:
    get:
      summary: Get all connections
      operationId: connectionsAll
      description: |
        This endpoint includes all the configured integrations and contains the required assets
        to build an integrations page where your users can install integrations.
        OAuth2 supported integrations will contain authorize and revoke links to handle the authentication flows.
      tags:
        - Connections
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/api'
        - $ref: '#/components/parameters/configured'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetConnections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/connections/{unified_api}/{service_id}':
    patch:
      tags:
        - Connections
      summary: Update a connection
      description: Update a connection
      operationId: connectionsUpdate
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      security:
        - apiKey: []
      requestBody:
        $ref: '#/components/requestBodies/UpdateConnectionRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UpdateConnection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Connections
      summary: Deletes a connection
      description: Deletes a connection
      operationId: deleteConnection
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      security:
        - apiKey: []
      responses:
        '204':
          description: Resource deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/connections/{unified_api}/{service_id}/{resource}/config':
    get:
      tags:
        - Connections
      summary: Connection Settings
      description: |
        This endpoint returns custom settings and their defaults required by connection for a given resource.
      operationId: connectionsOne
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/resource'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetConnection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Connections
      summary: Update Connection
      description: Update default values for a connection's resource settings
      operationId: resourceSettingsUpdate
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/resource'
      security:
        - apiKey: []
      requestBody:
        description: Fields that need to be updated on the resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      responses:
        '200':
          $ref: '#/components/responses/UpdateConnection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/authorize/{service_id}/{application_id}':
    get:
      tags:
        - Connections
      summary: Authorize
      operationId: authorize
      description: |
        __In most cases the authorize link is provided in the ``/connections`` endpoint. Normally you don't need to manually generate these links.__

        Use this endpoint to authenticate a user with a connector. It will return a 302 redirect to the downstream connector endpoints.

        Auth links will have a state parameter included to verify the validity of the request. This is the url your users will use to activate OAuth supported integation providers.

        Vault handles the complete Authorization Code Grant Type Flow for you and will redirect you to the dynamic redirect uri you have appended to the url in case this is missing the default redirect uri you have configured for your Unify application.
      parameters:
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/application_id'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/redirect_uri'
      security:
        - apiKey: []
      responses:
        '200':
          description: ok
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/revoke/{service_id}/{application_id}':
    get:
      tags:
        - Connections
      summary: Revoke
      operationId: revoke
      description: |
        __In most cases the authorize link is provided in the ``/connections`` endpoint. Normally you don't need to manually generate these links.__

        Use this endpoint to revoke an existing OAuth connector.

        Auth links will have a state parameter included to verify the validity of the request. This is the url your users will use to activate OAuth supported integation providers.

        Vault handles the complete revoke flow for you and will redirect you to the dynamic redirect uri you have appended to the url in case this is missing the default redirect uri you have configured for your Unify application.
      parameters:
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/application_id'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/redirect_uri'
      security:
        - apiKey: []
      responses:
        '200':
          description: ok
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /vault/sessions:
    post:
      summary: Create Session
      operationId: createSession
      description: |
        Making a POST request to this endpoint will initiate a Hosted Vault session. Redirect the consumer to the returned
        url to allow temporary access to manage their integrations and settings.

        Note: This is a short lived token that will expire after 30 minutes (TTL: 1800).
      tags:
        - Sessions
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
      security:
        - apiKey: []
      requestBody:
        description: Additional redirect uri and/or consumer metadata
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /vault/proxy:
    post:
      summary: Proxy call
      operationId: proxyCall
      description: |
        Proxies a downstream API call to a connector and injects the necessary credentials into a request stored in Vault. This allows you to have an additional security layer and logging without needing to rely on Unify for normalization.
        **Note**: Vault will proxy all data to the downstream URL and method/verb in the headers.
      tags:
        - Proxy
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/x-apideck-service-id'
        - $ref: '#/components/parameters/x-apideck-downstream-authorization'
        - $ref: '#/components/parameters/x-apideck-downstream-url'
        - $ref: '#/components/parameters/x-apideck-downstream-method'
      security:
        - apiKey: []
      requestBody:
        description: Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties: {}
              example:
                account_sid: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                api_version: '2010-04-01'
                body: This is the ship that made the Kessel Run in fourteen parsecs?
                date_created: 'Thu, 30 Jul 2015 20:12:31 +0000'
                date_sent: 'Thu, 30 Jul 2015 20:12:33 +0000'
                date_updated: 'Thu, 30 Jul 2015 20:12:33 +0000'
                direction: outbound-api
                error_code: null
                error_message: null
                from: '+15017122661'
                messaging_service_sid: MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                num_media: '0'
                num_segments: '1'
                price: null
                price_unit: null
                sid: SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                status: sent
                subresource_uris:
                  media: /2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Media.json
                to: '+15558675310'
                uri: /2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.json
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '201':
          $ref: '#/components/responses/Created'
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
