openapi: 3.0.3
info:
  version: 4.3.1
  title: Vault API
  description: "Welcome to the Vault API \U0001F44B\n\nWhen you're looking to connect to an API, the first step is authentication.\n\nVault helps you handle OAuth flows, store API keys, and refresh access tokens from users (called consumers in Apideck).\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## Get Started\n\nTo use the Apideck APIs, you need to sign up for free at [https://app.apideck.com/signup](). Follow the steps below to get started.\n\n- [Create a free account.](https://app.apideck.com/signup)\n- Go to the [Dashboard](https://app.apideck.com/unify/unified-apis/dashboard).\n- Get your API key and the application ID.\n- Select and configure the integrations you want to make available to your users. Through the Unify dashboard, you can configure which connectors you want to support as integrations.\n- Retrieve the client_id and client_secret for the integration you want to activate (Only needed for OAuth integrations).\n- Soon, you can skip the previous step and use the Apideck sandbox credentials to get you started instead (upcoming)\n- Register the redirect URI for the example app (https://unify.apideck.com/vault/callback) in the list of redirect URIs under your app's settings\n- Use the [publishing guides](/app-listing-requirements) to get your integration listed across app marketplaces.\n\n### Hosted Vault\n\nHosted Vault (vault.apideck.com) is a no-code solution, so you don't need to build your own UI to handle the integration settings and authentication.\n\n![Hosted Vault - Integrations portal](https://github.com/apideck-samples/integration-settings/raw/master/public/img/vault.png)\n\nBehind the scenes, Hosted Vault implements the Vault API endpoints and handles the following features for your customers:\n\n- Add a connection\n- Handle the OAuth flow\n- Configure connection settings per integration\n- Manage connections\n- Discover and propose integration options\n- Search for integrations (upcoming)\n- Give integration suggestions based on provided metadata (email or website) when creating the session (upcoming)\n\nTo use Hosted Vault, you will need to first [__create a session__](https://developers.apideck.com/apis/vault/reference#operation/createSession). This can be achieved by making a POST request to the Vault API to create a valid session for a user, hereafter referred to as the consumer ID.\n\nExample using curl:\n\n```\ncurl -X POST https://unify.apideck.com/vault/sessions\n    -H \"Content-Type: application/json\"\n    -H \"Authorization: Bearer <your-api-key>\"\n    -H \"X-APIDECK-CONSUMER-ID: <consumer-id>\"\n    -H \"X-APIDECK-APP-ID: <application-id>\"\n    -d '{\"consumer_metadata\": { \"account_name\" : \"Sample\", \"user_name\": \"Sand Box\", \"email\": \"sand@box.com\", \"image\": \"https://unavatar.now.sh/jake\" }, \"theme\": { \"vault_name\": \"Intercom\", \"primary_color\": \"#286efa\", \"sidepanel_background_color\": \"#286efa\",\"sidepanel_text_color\": \"#FFFFFF\", \"favicon\": \"https://res.cloudinary.com/apideck/icons/intercom\" }}'\n```\n\n### Vault API\n\n_Beware, this is strategy takes more time to implement in comparison to Hosted Vault._\n\nIf you are building your integration settings UI manually, you can call the Vault API directly.\n\nThe Vault API is for those who want to completely white label the in-app integrations overview and authentication experience. All the available endpoints are listed below.\n\nThrough the API, your customers authenticate directly in your app, where Vault will still take care of redirecting to the auth provider and back to your app.\n\nIf you're already storing access tokens, we will help you migrate through our Vault Migration API (upcoming).\n\n## Domain model\n\nAt its core, a domain model creates a web of interconnected entities.\n\nOur domain model contains five main entity types: Consumer (user, account, team, machine), Application, Connector, Integration, and Connection.\n\n## Connection state\n\nThe connection state is computed based on the connection flow below.\n\n![](https://developers.apideck.com/api-references/vault/connection-flow.png)\n\n## How does Vault integrate with Unify and Proxy?\n\nThe only thing you need to use the Unify APIs and Proxy is the consumer id; thereafter, Vault will do the look-up in the background to handle the token injection before performing the API call(s).\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-app-id      | String  | Yes      | The id of your Unify application. Available at https://app.apideck.com/api-keys.                                                                               |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n\n## Sandbox (upcoming)\n\nThe sandbox is pre-loaded with data similar to a real-life integrations setup. You can use the preconfigured OAauth configured connectors for testing purposes and can skip this step by using the Apideck sandbox credentials to get you started.\n\n## Guides\n\n- [How to build an integrations UI with Vault](https://github.com/apideck-samples/integration-settings)\n- How to configure the OAuth credentials for integration providers (COMING SOON)\n\n## FAQ\n\n**What purpose does Vault serve? Can I just handle the authentication and access token myself?**\nYou can store everything yourself, but that defeats the purpose of using Apideck Unify. Handling tokens for multiple providers can quickly become very complex.\n\n### Is my data secure?\n\nVault employs data minimization, therefore only requesting the minimum amount of scopes needed to perform an API request.\n\n### How do I migrate existing data?\n\nUsing our migration API, you can migrate the access tokens and accounts to Apideck Vault. (COMING SOON)\n\n### Can I use Vault in combination with existing integrations?\n\nYes, you can. The flexibility of Unify allows you to quickly the use cases you need while keeping a gradual migration path based on your timeline and requirements.\n\n### How does Vault work for Apideck Ecosystem customers?\n\nOnce logged in, pick your ecosystem; on the left-hand side of the screen, you'll have the option to create an application underneath the Unify section.\n\n### How to integrate Apideck Vault\n\nThis section covers everything you need to know to authenticate your customers through Vault.\nVault provides **three auth strategies** to use API tokens from your customers:\n\n- Vault API\n- Hosted Vault\n- Apideck Ecosystem _(COMING SOON)_\n\nYou can also opt to bypass Vault and still take care of authentication flows yourself. Make sure to put the right safeguards in place to protect your customers' tokens and other sensitive data.\n\n### What auth types does Vault support?\n\nWhat auth strategies does Vault handle? We currently support three flows so your customers can activate an integration.\n\n#### API keys\n\nFor Services supporting the API key strategy, you can use Hosted Vault will need to provide an in-app form where users can configure their API keys provided by the integration service.\n\n#### OAuth 2.0\n\n##### Authorization Code Grant Type Flow\n\nVault handles the complete Authorization Code Grant Type Flow for you. This flow only supports browser-based (passive) authentication because most identity providers don't allow entering a username and password to be entered into applications that they don't own.\n\nCertain connectors require an OAuth redirect authentication flow, where the end-user is redirected to the provider's website or mobile app to authenticate.\n\nThis is being handled by the `/authorize` endpoint.\n\n#### Basic auth\n\nBasic authentication is a simple authentication scheme built into the HTTP protocol. The required fields to complete basic auth are handled by Hosted Vault or by updating the connection through the Vault API below.\n"
  contact:
    email: hello@apideck.com
    url: 'https://developers.apideck.com'
  x-logo:
    url: 'https://developers.apideck.com/icon.png'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: Apideck Developer Docs
  url: 'https://developers.apideck.com'
servers:
  - url: 'https://unify.apideck.com'
    description: Production server
tags:
  - name: Sessions
    description: ''
  - name: Connections
    description: ''
  - name: Consumers
    description: ''
  - name: Logs
    description: ''
components:
  parameters:
    id:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: ID of the record you are acting upon.
    x-apideck-app-id:
      name: x-apideck-app-id
      in: header
      required: true
      description: The ID of your Unify application
      schema:
        type: string
    x-apideck-consumer-id:
      name: x-apideck-consumer-id
      in: header
      required: true
      description: ID of the consumer which you want to get or push data from
      schema:
        type: string
    x-apideck-service-id:
      name: x-apideck-service-id
      in: header
      required: true
      description: 'Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.'
      schema:
        type: string
    unified_api:
      name: unified_api
      in: path
      required: true
      description: Unified API
      schema:
        type: string
      example: crm
    service_id:
      name: service_id
      in: path
      description: Service ID of the resource to return
      required: true
      schema:
        type: string
      example: pipedrive
    application_id:
      name: application_id
      in: path
      description: Application ID of the resource to return
      required: true
      schema:
        type: string
    consumer_id:
      name: consumer_id
      in: path
      description: ID of the consumer to return
      required: true
      schema:
        type: string
      example: test_user_id
    x-apideck-downstream-url:
      name: x-apideck-downstream-url
      in: header
      description: Downstream URL
      example: 'https://api.twilio.com'
      required: true
      schema:
        type: string
    x-apideck-downstream-method:
      name: x-apideck-downstream-method
      in: header
      description: 'Downstream method. If not provided the upstream method will be inherited,'
      example: POST
      required: false
      schema:
        type: string
    x-apideck-downstream-authorization:
      name: x-apideck-downstream-authorization
      in: header
      description: Downstream authorization header. This will skip the Vault token injection.
      example: Bearer XXXXXXXXXXXXXXXXX
      required: false
      schema:
        type: string
    api:
      name: api
      in: query
      description: Scope results to Unified API
      schema:
        type: string
      example: crm
    resource:
      name: resource
      in: path
      required: true
      description: Resource Name
      schema:
        type: string
      example: leads
    raw:
      name: raw
      in: query
      description: Include raw response. Mostly used for debugging purposes
      schema:
        type: boolean
        default: true
    limit:
      name: limit
      in: query
      description: Number of records to return
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
    cursor:
      name: cursor
      in: query
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      schema:
        type: string
        nullable: true
    filter:
      name: filter
      in: query
      description: Filter results
      schema:
        type: object
        properties:
          connector_id:
            type: string
            example: crm+salesforce
            nullable: true
          status_code:
            type: number
            example: 201
            nullable: true
          exclude_unified_apis:
            type: array
            items:
              type: string
            example:
              - vault
              - proxy
    redirect_uri:
      name: redirect_uri
      in: query
      description: URL to redirect back to after authorization. When left empty the default configured redirect uri will be used.
      required: true
      schema:
        type: string
      example: 'http://example.com/integrations'
    state:
      name: state
      in: query
      description: An opaque value the applications adds to the initial request that the authorization server includes when redirecting the back to the application. This value must be used by the application to prevent CSRF attacks.
      required: true
      schema:
        type: string
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk
    configured:
      name: configured
      in: query
      description: Scopes results to connections that have been configured or not
      schema:
        type: boolean
      example: true
    scope:
      name: scope
      in: query
      description: One or more OAuth scopes to request from the connector. OAuth scopes control the set of resources and operations that are allowed after authorization. Refer to the connector's documentation for the available scopes.
      schema:
        type: array
        items:
          type: string
      style: spaceDelimited
      explode: false
      example:
        - openid
        - 'leads:write'
        - 'profile:read'
    start_datetime:
      name: start_datetime
      in: query
      description: Scopes results to requests that happened after datetime
      required: true
      schema:
        type: string
      example: '2021-05-01T12:00:00.000Z'
    end_datetime:
      name: end_datetime
      in: query
      description: Scopes results to requests that happened before datetime
      required: true
      schema:
        type: string
      example: '2021-05-30T12:00:00.000Z'
  schemas:
    Connection:
      type: object
      properties:
        id:
          type: string
          example: lead+close
          readOnly: true
        service_id:
          type: string
          example: salesforce
        name:
          type: string
          example: Salesforce
        tag_line:
          type: string
          example: 'CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.'
        unified_api:
          type: string
          example: crm
        website:
          type: string
          example: 'https://www.salesforce.com'
        icon:
          type: string
          example: 'https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png'
        logo:
          type: string
          example: 'https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg'
        settings:
          type: object
          description: Connection settings. Values will persist to `form_fields` with corresponding id
          nullable: true
          example:
            instance_url: 'https://eu28.salesforce.com'
        metadata:
          type: object
          properties:
            ecosystem:
              $ref: '#/components/schemas/ConnectionMetadata'
            account:
              $ref: '#/components/schemas/ConnectionMetadata'
          nullable: true
          example:
            ecosystem:
              name: My Ecosystem
              id: a6469332-7948-46a6-abc2-87ba3f005025
            account:
              name: My Company
              id: c01458a5-7276-41ce-bc19-639906b0450a
        auth_type:
          type: string
          enum:
            - oauth2
            - apiKey
            - basic
          nullable: true
        status:
          type: string
          enum:
            - live
            - upcoming
            - requested
        form_fields:
          type: array
          items:
            $ref: '#/components/schemas/FormField'
          example:
            - id: instance_url
              label: Instance url
              value: 'https://eu28.salesforce.com'
              placeholder: ''
              mask: false
              type: text
              required: true
              disabled: false
              custom_field: false
        configuration:
          type: array
          items:
            type: object
            properties:
              resource:
                type: string
                example: leads
              defaults:
                type: array
                items:
                  type: object
                  properties:
                    target:
                      type: string
                      enum:
                        - custom_fields
                        - resource
                      example: custom_fields
                      readOnly: true
                    id:
                      type: string
                      example: ProductInterest
                    options:
                      type: array
                      items:
                        anyOf:
                          - type: object
                            $ref: '#/components/schemas/FormFieldOption'
                          - type: object
                            properties:
                              id:
                                type: string
                                example: '1234'
                              label:
                                type: string
                                example: General Channel
                              options:
                                type: array
                                items:
                                  $ref: '#/components/schemas/FormFieldOption'
                    value:
                      anyOf:
                        - type: string
                          example: GC5000 series
                        - type: integer
                          example: 10
                        - type: number
                          example: 10.5
                        - type: boolean
                          example: true
                        - type: array
                          items:
                            anyOf:
                              - type: string
                                example: GC6000 series
                              - type: integer
                                example: 10
                              - type: number
                                example: 10.5
        configurable_resources:
          type: array
          items:
            type: string
          example:
            - opportunities
            - companies
            - contacts
            - leads
        resource_schema_support:
          type: array
          items:
            type: string
          example:
            - leads
        resource_settings_support:
          type: array
          items:
            type: string
          example:
            - leads
        settings_required_for_authorization:
          type: array
          items:
            type: string
          example:
            - instance_url
        authorize_url:
          type: string
          example: 'https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>'
          nullable: true
        revoke_url:
          type: string
          nullable: true
          example: 'https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>'
        enabled:
          type: boolean
          example: true
        created_at:
          type: number
          example: 1615563533390
        updated_at:
          type: number
          example: 1616662325753
          nullable: true
        state:
          type: string
          enum:
            - available
            - callable
            - added
            - authorized
          example: authorized
    ConnectionMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Session:
      type: object
      properties:
        session_uri:
          type: string
          example: 'http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj'
    SessionRequest:
      type: object
      properties:
        redirect_uri:
          type: string
          example: 'https://mysaas.com/dashboard'
        consumer_metadata:
          type: object
          properties:
            account_name:
              type: string
              example: SpaceX
            user_name:
              type: string
              example: Elon Musk
            email:
              type: string
              example: elon@musk.com
            image:
              type: string
              example: 'https://www.spacex.com/static/images/share.jpg'
        theme:
          type: object
          properties:
            vault_name:
              type: string
              example: Intercom
            primary_color:
              type: string
              example: '#286efa'
            sidepanel_background_color:
              type: string
              example: '#286efa'
            sidepanel_text_color:
              type: string
              example: '#FFFFFF'
            favicon:
              type: string
              example: 'https://res.cloudinary.com/apideck/icons/intercom'
            terms_url:
              type: string
              example: 'https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e'
            privacy_url:
              type: string
              example: 'https://compliance.apideck.com/privacy-policy'
    FormField:
      type: object
      properties:
        id:
          type: string
          example: channel
        label:
          type: string
          example: Channel
        placeholder:
          type: string
          example: Select a channel
          nullable: true
        description:
          type: string
          example: Slack channel to push notification to
          nullable: true
        type:
          enum:
            - text
            - checkbox
            - tel
            - email
            - url
            - textarea
            - select
            - filtered-select
            - multi-select
            - datetime
            - date
            - time
            - number
        required:
          type: boolean
        custom_field:
          type: boolean
        disabled:
          type: boolean
          nullable: true
        options:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
                example: General Channel
              value:
                anyOf:
                  - type: string
                    example: general
                  - type: integer
                    example: 123
                  - type: number
                    example: 12.5
                  - type: boolean
                    example: true
                  - type: array
                    items:
                      anyOf:
                        - type: string
                        - type: integer
                        - type: number
                    example:
                      - team
                      - general
    FormFieldOption:
      type: object
      properties:
        label:
          type: string
          example: General Channel
        value:
          anyOf:
            - type: string
              example: general
            - type: integer
              example: 123
            - type: number
              example: 12.5
            - type: boolean
              example: true
            - type: array
              items:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
              example:
                - team
                - general
    Log:
      additionalProperties: false
      properties:
        api_style:
          description: Indicates if the request was made via REST or Graphql endpoint.
          example: REST
          type: string
        base_url:
          description: The Apideck base URL the request was made to.
          example: unify.apideck.com
          type: string
        child_request:
          description: Indicates whether or not this is a child or parent request.
          example: false
          type: boolean
        consumer_id:
          description: The consumer Id associated with the request.
          example: test-consumer
          type: string
        duration:
          description: The entire execution time in milliseconds it took to call the Apideck service provider.
          example: 2220.379304
          type: number
        error_message:
          description: 'If error occured, this is brief explanation'
          example: Refresh token is invalid
          type: string
          nullable: true
        execution:
          description: The entire execution time in milliseconds it took to make the request.
          example: 2248
          type: integer
        has_children:
          description: 'When request is a parent request, this indicates if there are child requests associated.'
          example: false
          type: boolean
        http_method:
          description: HTTP Method of request.
          example: GET
          type: string
        id:
          description: UUID acting as Request Identifier.
          example: 0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f
          type: string
        latency:
          description: Latency added by making this request via Unified Api.
          example: 27.620695999999953
          type: number
        operation:
          additionalProperties: false
          description: The request as defined in OpenApi Spec.
          properties:
            id:
              description: The OpenApi Operation Id associated with the request
              example: connectionsAll
              type: string
            name:
              description: The OpenApi Operation name associated with the request
              example: Get All Connections
              type: string
          required:
            - id
            - name
          type: object
        parent_id:
          description: "When request is a child request, this UUID indicates it's parent request."
          example: 0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f
          type: string
          nullable: true
        path:
          description: The path component of the URI the request was made to.
          example: /vault/connections
          type: string
        sandbox:
          description: Indicates whether the request was made using Apidecks sandbox credentials or not.
          example: false
          type: boolean
        service:
          additionalProperties: false
          description: Apideck service provider associated with request.
          properties:
            id:
              description: Apideck service provider id.
              example: apideck-vault
              type: string
            name:
              description: Apideck service provider name.
              example: Apideck Vault
              type: string
          required:
            - id
            - name
          type: object
        source_ip:
          description: The IP address of the source of the request.
          example: 94.227.131.238
          type: string
          nullable: true
        status_code:
          description: HTTP Status code that was returned.
          example: 200
          type: integer
        success:
          description: Whether or not the request was successful.
          example: true
          type: boolean
        timestamp:
          description: ISO Date and time when the request was made.
          example: '2021-07-12T14:26:17.420Z'
          type: string
        unified_api:
          description: Which Unified Api request was made to.
          example: vault
          enum:
            - crm
            - lead
            - proxy
            - vault
          type: string
      required:
        - id
        - parent_id
        - api_style
        - base_url
        - child_request
        - consumer_id
        - duration
        - execution
        - has_children
        - http_method
        - latency
        - operation
        - path
        - sandbox
        - service
        - status_code
        - success
        - timestamp
        - unified_api
      type: object
    GetConnectionResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          properties:
            data:
              $ref: '#/components/schemas/Connection'
    GetConnectionsResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
    CreateConnectionRequestBody:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
        settings:
          type: object
          description: Connection settings. Values will persist to `form_fields` with corresponding id
          nullable: true
          example:
            instance_url: 'https://eu28.salesforce.com'
        metadata:
          type: object
          properties:
            ecosystem:
              $ref: '#/components/schemas/ConnectionMetadata'
            account:
              $ref: '#/components/schemas/ConnectionMetadata'
          nullable: true
          example:
            ecosystem:
              name: My Ecosystem
              id: a6469332-7948-46a6-abc2-87ba3f005025
            account:
              name: My Company
              id: c01458a5-7276-41ce-bc19-639906b0450a
      additionalProperties: false
    CreateConnectionResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 201
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          $ref: '#/components/schemas/Connection'
    UpdateConnectionRequestBody:
      $ref: '#/components/schemas/CreateConnectionRequestBody'
    UpdateConnectionResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          $ref: '#/components/schemas/Connection'
    CreateSessionResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          properties:
            data:
              $ref: '#/components/schemas/Session'
    GetConsumerResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          type: object
          properties:
            consumer_id:
              type: string
              example: test_consumer_id
            connections:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: 1111+test_user_id
                    readOnly: true
                  name:
                    type: string
                    example: Salesforce
                  icon:
                    type: string
                    example: 'https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png'
                  logo:
                    type: string
                    example: 'https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg'
                  service_id:
                    type: string
                    example: teamleader
                  unified_api:
                    type: string
                    example: crm
                  auth_type:
                    type: string
                    enum:
                      - oauth2
                      - apiKey
                      - basic
                    nullable: true
                  enabled:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: '2020-09-19T12:18:37.071Z'
                  updated_at:
                    type: string
                    example: '2020-09-19T12:18:37.071Z'
                    nullable: true
                  state:
                    type: string
                    enum:
                      - available
                      - callable
                      - added
                      - configured
                      - authorized
                    example: authorized
            aggregated_request_count:
              type: number
              example: 101
            request_counts:
              $ref: '#/components/schemas/RequestCountAllocation'
            request_count_updated:
              type: string
              example: '2021-05-07T12:55:42.242Z'
    GetConsumersResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          type: array
          items:
            type: object
            properties:
              consumer_id:
                type: string
                example: test_consumer_id
              aggregated_request_count:
                type: number
                example: 101
              request_counts:
                $ref: '#/components/schemas/RequestCountAllocation'
              request_count_updated:
                type: string
                example: '2021-05-07T12:55:42.242Z'
              services:
                type: array
                items:
                  type: string
                  example: salesforce
                example:
                  - salesforce
                  - stripe
    GetLogsResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Log'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    ProxyRequest:
      type: object
      properties: {}
      example:
        account_sid: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        api_version: '2010-04-01'
        body: This is the ship that made the Kessel Run in fourteen parsecs?
        date_created: 'Thu, 30 Jul 2015 20:12:31 +0000'
        date_sent: 'Thu, 30 Jul 2015 20:12:33 +0000'
        date_updated: 'Thu, 30 Jul 2015 20:12:33 +0000'
        direction: outbound-api
        error_code: null
        error_message: null
        from: '+15017122661'
        messaging_service_sid: MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        num_media: '0'
        num_segments: '1'
        price: null
        price_unit: null
        sid: SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        status: sent
        subresource_uris:
          media: /2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Media.json
        to: '+15558675310'
        uri: /2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.json
    RequestCountAllocation:
      type: object
      properties:
        unify:
          type: number
          example: 100
        proxy:
          type: number
          example: 10
        vault:
          type: number
          example: 21
    ConsumerRequestCountsInDateRangeResponse:
      type: object
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          type: object
          properties:
            application_id:
              type: string
              example: '1111'
            consumer_id:
              type: string
              example: test_user_id
            start_datetime:
              type: string
              example: '2021-05-01T12:00:00.000Z'
            end_datetime:
              type: string
              example: '2021-05-10T12:00:00.000Z'
            aggregated_request_count:
              type: number
              example: 40
            request_counts:
              $ref: '#/components/schemas/RequestCountAllocation'
    Meta:
      type: object
      description: Reponse metadata
      properties:
        items_on_page:
          type: integer
          description: Number of items returned in the data property of the response
          example: 50
        cursors:
          type: object
          description: Cursors to navigate to previous or next pages through the API
          properties:
            previous:
              type: string
              description: Cursor to navigate to the previous page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
            current:
              type: string
              description: Cursor to navigate to the current page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
            next:
              type: string
              description: Cursor to navigate to the next page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
    Links:
      type: object
      description: Links to navigate to previous or next pages through the API
      properties:
        previous:
          type: string
          description: Link to navigate to the previous page through the API
          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D'
          nullable: true
        current:
          type: string
          description: Link to navigate to the current page through the API
          example: 'https://unify.apideck.com/crm/companies'
        next:
          type: string
          description: Link to navigate to the previous page through the API
          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
          nullable: true
    Created:
      type: object
      required:
        - ''
      properties: {}
    NotFoundResponse:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 404
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Found
        typeName:
          type: string
          description: The type of error returned
          example: EntityNotFoundError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
        detail:
          anyOf:
            - type: string
              example: "Could not find widget with id: '123'"
            - type: object
              example:
                not_found:
                  entity: widget
                  id: '123'
          description: Contains parameter or domain specific information related to the error and why it occured.
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#entitynotfounderror'
    Unauthorized:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 401
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unauthorized
        typeName:
          type: string
          description: The type of error returned
          example: UnauthorizedError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: Failed to generate valid JWT Session. Verify applicationId is correct
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#unauthorizederror'
    Unprocessable:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 422
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unprocessable Entity
        typeName:
          type: string
          description: The type of error returned
          example: InvalidStateError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid State
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: State did not include unified_api
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#invalidstateerror'
    BadRequest:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        typeName:
          type: string
          description: The type of error returned
          example: RequestHeadersValidationError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
        detail:
          anyOf:
            - type: string
              example: Missing property foobar
            - type: object
              example:
                missing:
                  - foobar: required
          description: Contains parameter or domain specific information related to the error and why it occured.
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#requestbodyvalidationerror'
    PaymentRequired:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 402
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Payment Required
        typeName:
          type: string
          description: The type of error returned
          example: RequestLimitError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: You have reached your limit of 2000
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#requestlimiterror'
    NotImplemented:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 501
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Implemented
        typeName:
          type: string
          description: The type of error returned
          example: MappingError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
        detail:
          anyOf:
            - type: string
              example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occured.
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#mappingerror'
    UnexpectedError:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        typeName:
          type: string
          description: The type of error returned
          example: RequestHeadersValidationError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
        detail:
          anyOf:
            - type: string
              example: 'Missing Header: x-apideck-consumer-id'
            - type: object
              example:
                missing:
                  - x-apideck-consumer-id: required
          description: Contains parameter or domain specific information related to the error and why it occured.
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#unauthorizederror'
  requestBodies:
    CreateConnectionRequestBody:
      description: Fields to be persisted as Connection
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConnectionRequestBody'
    UpdateConnectionRequestBody:
      description: Fields to be updated on the resource
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConnectionRequestBody'
  responses:
    GetConnection:
      description: Connection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectionResponse'
    GetConnections:
      description: All Connections
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectionsResponse'
    CreateConnection:
      description: Connection created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConnectionResponse'
    UpdateConnection:
      description: Connection updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConnectionResponse'
    CreateSession:
      description: Session created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSessionResponse'
    GetConsumer:
      description: Consumer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConsumerResponse'
    GetConsumers:
      description: All Consumers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConsumersResponse'
    GetLogs:
      description: All Consumer Logs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLogsResponse'
    ConsumerRequestCountsInDateRange:
      description: Consumers Request Counts within Date Range
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerRequestCountsInDateRangeResponse'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
    Unprocessable:
      description: Unprocessable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unprocessable'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    PaymentRequired:
      description: Payment Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequired'
    NotImplemented:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotImplemented'
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedError'
    ProxyError:
      description: Proxy error
      headers:
        x-apideck-downstream-error:
          schema:
            type: boolean
            description: Indicates if the error returned in the body is from the downstream
      content:
        application/json:
          schema: {}
    Ok:
      description: Ok
      content:
        application/json:
          schema: {}
          example: {}
    NoContent:
      description: No content
      content:
        application/json:
          schema: {}
          example: {}
    Created:
      description: Resource created
      content:
        application/json:
          schema: {}
          example: {}
    Updated:
      description: Resource updated
      content:
        application/json:
          schema: {}
          example: {}
    Deleted:
      description: Resource succesfully deleted
      content:
        application/json:
          schema: {}
          example: {}
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
      description: |
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. 
        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.
        Your Apideck application_id can also be found on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header. 

        - Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    applicationId:
      type: apiKey
      in: header
      name: x-apideck-app-id
      description: The ID of your Unify application
security:
  - apiKey: []
    applicationId: []
paths:
  /vault/consumers:
    get:
      summary: Get all consumers
      operationId: consumersAll
      description: |
        This endpoint includes all application consumers, along with an aggregated count of requests made.
      tags:
        - Consumers
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetConsumers'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/consumers/{consumer_id}':
    get:
      summary: Get consumer
      operationId: consumersOne
      description: |
        Consumer detail including their aggregated counts with the connections they have authorized.
      tags:
        - Consumers
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/consumer_id'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetConsumer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/consumers/{consumer_id}/stats':
    get:
      summary: Consumer request counts
      operationId: consumerRequestCounts
      description: |
        Get consumer request counts within a given datetime range.
      tags:
        - Consumers
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/consumer_id'
        - $ref: '#/components/parameters/start_datetime'
        - $ref: '#/components/parameters/end_datetime'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/ConsumerRequestCountsInDateRange'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /vault/connections:
    get:
      summary: Get all connections
      operationId: connectionsAll
      description: |
        This endpoint includes all the configured integrations and contains the required assets
        to build an integrations page where your users can install integrations.
        OAuth2 supported integrations will contain authorize and revoke links to handle the authentication flows.
      tags:
        - Connections
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/api'
        - $ref: '#/components/parameters/configured'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetConnections'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/connections/{unified_api}/{service_id}':
    post:
      summary: Create connection
      operationId: connectionsAdd
      description: |
        Create an authorized connection
      tags:
        - Connections
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      security:
        - apiKey: []
      requestBody:
        $ref: '#/components/requestBodies/CreateConnectionRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreateConnection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Connections
      summary: Update connection
      description: Update a connection
      operationId: connectionsUpdate
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      security:
        - apiKey: []
      requestBody:
        $ref: '#/components/requestBodies/UpdateConnectionRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/UpdateConnection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Connections
      summary: Deletes a connection
      description: Deletes a connection
      operationId: deleteConnection
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      security:
        - apiKey: []
      responses:
        '204':
          description: Resource deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/connections/{unified_api}/{service_id}/{resource}/config':
    get:
      tags:
        - Connections
      summary: Get settings
      description: |
        This endpoint returns custom settings and their defaults required by connection for a given resource.
      operationId: getConnectionSettings
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/resource'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetConnection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Connections
      summary: Update settings
      description: Update default values for a connection's resource settings
      operationId: updateConnectionSettings
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/resource'
      security:
        - apiKey: []
      requestBody:
        description: Fields that need to be updated on the resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      responses:
        '200':
          $ref: '#/components/responses/UpdateConnection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/authorize/{service_id}/{application_id}':
    get:
      tags:
        - Connections
      summary: Authorize
      operationId: authorize
      description: |
        __In most cases the authorize link is provided in the ``/connections`` endpoint. Normally you don't need to manually generate these links.__

        Use this endpoint to authenticate a user with a connector. It will return a 302 redirect to the downstream connector endpoints.

        Auth links will have a state parameter included to verify the validity of the request. This is the url your users will use to activate OAuth supported integation providers.

        Vault handles the complete Authorization Code Grant Type Flow for you and will redirect you to the dynamic redirect uri you have appended to the url in case this is missing the default redirect uri you have configured for your Unify application.
      parameters:
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/application_id'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/redirect_uri'
        - $ref: '#/components/parameters/scope'
      security: null
      responses:
        '301':
          description: redirect
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/vault/revoke/{service_id}/{application_id}':
    get:
      tags:
        - Connections
      summary: Revoke
      operationId: revoke
      description: |
        __In most cases the authorize link is provided in the ``/connections`` endpoint. Normally you don't need to manually generate these links.__

        Use this endpoint to revoke an existing OAuth connector.

        Auth links will have a state parameter included to verify the validity of the request. This is the url your users will use to activate OAuth supported integation providers.

        Vault handles the complete revoke flow for you and will redirect you to the dynamic redirect uri you have appended to the url in case this is missing the default redirect uri you have configured for your Unify application.
      parameters:
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/application_id'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/redirect_uri'
      security:
        - apiKey: []
      responses:
        '301':
          description: redirect
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /vault/callback:
    get:
      tags:
        - Connections
      summary: Callback
      operationId: callback
      description: |
        This endpoint gets called after the triggering the authorize flow.

        Callback links need a state and code parameter to verify the validity of the request.
      parameters:
        - $ref: '#/components/parameters/state'
      security: null
      responses:
        '301':
          description: callback
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /vault/sessions:
    post:
      summary: Create Session
      operationId: createSession
      description: |
        Making a POST request to this endpoint will initiate a Hosted Vault session. Redirect the consumer to the returned
        url to allow temporary access to manage their integrations and settings.

        Note: This is a short lived token that will expire after 1 hour (TTL: 3600).
      tags:
        - Sessions
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
      security:
        - apiKey: []
      requestBody:
        description: Additional redirect uri and/or consumer metadata
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateSession'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /vault/proxy:
    get:
      deprecated: true
      summary: GET
      operationId: getProxy
      description: |
        **Note**: This endpoint is deprecated in favor of the [Proxy API](https://docs.apideck.com/apis/proxy). Please use the new API as documented at https://docs.apideck.com/apis/proxy
      tags:
        - Proxy
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/x-apideck-service-id'
        - $ref: '#/components/parameters/x-apideck-downstream-authorization'
        - $ref: '#/components/parameters/x-apideck-downstream-url'
        - $ref: '#/components/parameters/x-apideck-downstream-method'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        default:
          $ref: '#/components/responses/ProxyError'
    post:
      deprecated: true
      summary: POST
      operationId: postProxy
      description: |
        **Note**: This endpoint is deprecated in favor of the [Proxy API](https://docs.apideck.com/apis/proxy). Please use the new API as documented at https://docs.apideck.com/apis/proxy
      tags:
        - Proxy
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/x-apideck-service-id'
        - $ref: '#/components/parameters/x-apideck-downstream-authorization'
        - $ref: '#/components/parameters/x-apideck-downstream-url'
        - $ref: '#/components/parameters/x-apideck-downstream-method'
      security:
        - apiKey: []
      requestBody:
        description: Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyRequest'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        default:
          $ref: '#/components/responses/ProxyError'
    put:
      deprecated: true
      summary: PUT
      operationId: putProxy
      description: |
        **Note**: This endpoint is deprecated in favor of the [Proxy API](https://docs.apideck.com/apis/proxy). Please use the new API as documented at https://docs.apideck.com/apis/proxy
      tags:
        - Proxy
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/x-apideck-service-id'
        - $ref: '#/components/parameters/x-apideck-downstream-authorization'
        - $ref: '#/components/parameters/x-apideck-downstream-url'
        - $ref: '#/components/parameters/x-apideck-downstream-method'
      security:
        - apiKey: []
      requestBody:
        description: Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyRequest'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        default:
          $ref: '#/components/responses/ProxyError'
    patch:
      deprecated: true
      summary: PATCH
      operationId: patchProxy
      description: |
        **Note**: This endpoint is deprecated in favor of the [Proxy API](https://docs.apideck.com/apis/proxy). Please use the new API as documented at https://docs.apideck.com/apis/proxy
      tags:
        - Proxy
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/x-apideck-service-id'
        - $ref: '#/components/parameters/x-apideck-downstream-authorization'
        - $ref: '#/components/parameters/x-apideck-downstream-url'
        - $ref: '#/components/parameters/x-apideck-downstream-method'
      security:
        - apiKey: []
      requestBody:
        description: Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyRequest'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        default:
          $ref: '#/components/responses/ProxyError'
    delete:
      deprecated: true
      summary: DELETE
      operationId: deleteProxy
      description: |
        **Note**: This endpoint is deprecated in favor of the [Proxy API](https://docs.apideck.com/apis/proxy). Please use the new API as documented at https://docs.apideck.com/apis/proxy
      tags:
        - Proxy
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/x-apideck-service-id'
        - $ref: '#/components/parameters/x-apideck-downstream-authorization'
        - $ref: '#/components/parameters/x-apideck-downstream-url'
        - $ref: '#/components/parameters/x-apideck-downstream-method'
      security:
        - apiKey: []
      requestBody:
        description: Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyRequest'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        default:
          $ref: '#/components/responses/ProxyError'
  /vault/logs:
    get:
      summary: Get all consumer request logs
      operationId: logsAll
      description: |
        This endpoint includes all consumer request logs.
      tags:
        - Logs
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetLogs'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
