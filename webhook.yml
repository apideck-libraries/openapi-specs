openapi: 3.0.3
info:
  version: 10.21.2
  title: Webhook API
  description: |
    # Webhook API

    The Webhook API allows you to create, manage, and receive webhooks from Apideck's Unified APIs. Webhooks provide real-time notifications when events occur in connected services.

    ## Webhook Security

    Apideck signs all webhook events sent to your endpoints, allowing you to verify the authenticity of each request.

    ### Signature Verification

    Each webhook request includes an `x-apideck-signature` header that you can use to verify the request:

    1. Extract the `x-apideck-signature` header from the request
    2. Get the raw request body (as a string)
    3. Sort all object keys in the request body recursively (maintaining array order)
    4. Create a signature using HMAC SHA-256 with your API key as the secret
    5. Compare signatures using a constant-time comparison function

    For detailed implementation examples in multiple languages, see our [Webhook Signature Verification documentation](https://developers.apideck.com/guides/webhook-signature-verification).

    ## Base URL

    The base URL for all API requests is `https://unify.apideck.com`

    ## API Headers

    When making requests to manage webhooks (creating, updating, listing, or deleting webhook configurations), the following headers are required:

    | Name                  | Type    | Required | Description                                                                                                                   |
    | --------------------- | ------- | -------- | ----------------------------------------------------------------------------------------------------------------------------- |
    | x-apideck-app-id      | String  | Yes      | The application ID from your Unify application. Available at https://app.apideck.com/unify/api-keys.                          |
    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                |

    ## Webhook Event Headers

    When Apideck sends webhook events to your server, the following headers are included:

    | Name                    | Type    | Description                                                                                            |
    | ----------------------- | ------- | ------------------------------------------------------------------------------------------------------ |
    | x-apideck-signature     | String  | HMAC SHA-256 signature of the request body, used to verify the webhook came from Apideck               |
    | x-apideck-event-type    | String  | The type of event that triggered the webhook (e.g., "vault.connection.updated")                        |
    | x-apideck-idempotency-key | String  | A unique identifier for the webhook event, can be used to prevent duplicate processing                 |
    | User-Agent              | String  | "Apideck/WebhookClient"                                                                                |

    ## Authorization

    You can interact with the API through the authorization methods below.

    <!-- ReDoc-Inject: <security-definitions> -->
  contact:
    email: hello@apideck.com
    url: https://developers.apideck.com
  x-logo:
    url: https://developers.apideck.com/icon.png
  x-apideck-api: webhook
  x-apideck-sdk-support: true
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Apideck Developer Docs
  url: https://developers.apideck.com
servers:
  - url: https://unify.apideck.com
components:
  parameters:
    applicationId:
      name: x-apideck-app-id
      in: header
      required: true
      description: The ID of your Unify application
      schema:
        type: string
      example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
      x-speakeasy-name-override: appId
    servicePathId:
      in: path
      name: serviceId
      schema:
        type: string
      required: true
      description: Service provider ID.
      example: factorialhr
    consumerId:
      name: x-apideck-consumer-id
      in: header
      required: true
      description: ID of the consumer which you want to get or push data from
      schema:
        type: string
      example: test-consumer
      x-speakeasy-name-override: consumerId
    id:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: ID of the record you are acting upon.
    webhookToken:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: JWT Webhook token that represents the unifiedApi and applicationId associated to the event source.
    lookupIdToken:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: JWT Webhook token that represents the connection lookupId. Signed so we know source came from us
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijk2MDAwYzIzLWI1NmItNGRlOC1iZmEzLTMxNTAzMTE3YzBmNyJ9.rAXnsmZ4O7eF0aDwdflkxAJQwMUfWs5989WfmspNZ6Q
    lookupId:
      name: l_id
      in: query
      schema:
        type: string
      description: Unique identifier to used to look up consumer/connection when receiving connector events from downstream.
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA3NWUwNmEzLTUwNzUtNDY3Yi1hNTk5LWVkNmM5YTg5NTYyOCJ9._ppKdmBaCB2RHjBTifMNP2xKNeLBfNPim2CiHSUd0Zg
    downstreamEventType:
      name: e
      in: query
      description: The name of downstream event when connector does not supply in body or header
      schema:
        type: string
      example: Employees::Events::EmployeeCreated
    limit:
      name: limit
      in: query
      description: Number of results to return. Minimum 1, Maximum 200, Default 20
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
    cursor:
      name: cursor
      in: query
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      schema:
        type: string
        nullable: true
    filter:
      name: filter
      in: query
      description: Filter results
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/WebhookEventLogsFilter'
    validationToken:
      name: validationToken
      in: query
      description: Validation token for webhook verification
      required: false
      schema:
        type: string
      example: abc123
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
      description: Bad Request
    CreateWebhookResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateWebhookResponse'
      description: Webhooks
    DeleteWebhookResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteWebhookResponse'
      description: Webhooks
    ExecuteWebhookResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExecuteWebhookResponse'
      description: Execute Webhook
    GetWebhookEventLogsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebhookEventLogsResponse'
      description: EventLogs
    GetWebhookResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebhookResponse'
      description: Webhooks
    GetWebhooksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebhooksResponse'
      description: Webhooks
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotImplementedResponse'
      description: Not Implemented
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequiredResponse'
      description: Payment Required
    ResolveWebhookResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResolveWebhookResponse'
        text/plain:
          schema:
            type: string
            description: Plain text response for webhook validation (e.g., validation token)
      description: Resolve Webhook
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedResponse'
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedErrorResponse'
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableResponse'
      description: Unprocessable
    UpdateWebhookResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateWebhookResponse'
      description: Webhooks
  schemas:
    ApplicationId:
      type: string
      description: ID of your Apideck Application
      example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
    BadRequestResponse:
      type: object
      x-apideck-schema-id: BadRequest
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        type_name:
          type: string
          description: The type of error returned
          example: RequestValidationError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: Missing property foobar
            - type: object
              x-speakeasy-detail: true
              example:
                missing:
                  - foobar: required
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestvalidationerror
    ConsumerId:
      type: string
      example: test_consumer_id
      description: Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.
    CreatedAt:
      type: string
      title: Created at (timestamp)
      description: The date and time when the object was created.
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      readOnly: true
      nullable: true
    CreateWebhookRequest:
      type: object
      x-apideck-schema-id: CreateWebhookRequest
      additionalProperties: false
      required:
        - delivery_url
        - status
        - events
        - unified_api
      properties:
        description:
          $ref: '#/components/schemas/Description'
        unified_api:
          $ref: '#/components/schemas/UnifiedApiId'
        status:
          $ref: '#/components/schemas/Status'
        delivery_url:
          $ref: '#/components/schemas/DeliveryUrl'
        events:
          type: array
          title: Subscribed events
          description: The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
          example: &ref_0
            - vault.connection.created
            - vault.connection.updated
          items:
            $ref: '#/components/schemas/WebhookEventType'
    CreateWebhookResponse:
      type: object
      x-apideck-schema-id: CreateWebhookResponse
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          $ref: '#/components/schemas/Webhook'
        _raw:
          $ref: '#/components/schemas/Raw'
    DeleteWebhookResponse:
      type: object
      x-apideck-schema-id: DeleteWebhookResponse
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          $ref: '#/components/schemas/Webhook'
        _raw:
          $ref: '#/components/schemas/Raw'
    DeliveryUrl:
      type: string
      format: uri
      description: The delivery url of the webhook endpoint.
      pattern: ^(https?)://
      example: https://example.com/my/webhook/endpoint
    Description:
      type: string
      title: Description
      description: A description of the object.
      example: A description
      nullable: true
    ExecuteBaseUrl:
      type: string
      format: uri
      description: The Unify Base URL events from connectors will be sent to after service id is appended.
      pattern: ^(https?)://
      readOnly: true
      example: https://unify.apideck.com/webhook/webhooks/1234/execute
    ExecuteWebhookEventRequest:
      type: object
      x-apideck-schema-id: ExecuteWebhookEventRequest
      additionalProperties: true
    ExecuteWebhookEventsRequest:
      type: array
      x-apideck-schema-id: ExecuteWebhookEventsRequest
      items:
        type: object
        additionalProperties: true
    ExecuteWebhookResponse:
      type: object
      x-apideck-schema-id: ExecuteWebhookResponse
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        request_id:
          type: string
          description: UUID of the request received
          example: c6af9ac6-7b61-11e6-9a41-93e8deadbeef
        timestamp:
          type: string
          description: ISO Datetime webhook event was received
          example: '2021-10-01T08:26:28.039Z'
    GetWebhookEventLogsResponse:
      type: object
      x-apideck-schema-id: GetWebhookEventLogsResponse
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventLog'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
        _raw:
          $ref: '#/components/schemas/Raw'
    GetWebhookResponse:
      type: object
      x-apideck-schema-id: GetWebhookResponse
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          $ref: '#/components/schemas/Webhook'
        _raw:
          $ref: '#/components/schemas/Raw'
    GetWebhooksResponse:
      type: object
      x-apideck-schema-id: GetWebhooksResponse
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
        _raw:
          $ref: '#/components/schemas/Raw'
    Links:
      type: object
      x-apideck-schema-id: Links
      description: Links to navigate to previous or next pages through the API
      properties:
        previous:
          type: string
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
          nullable: true
        current:
          type: string
          description: Link to navigate to the current page through the API
          example: https://unify.apideck.com/crm/companies
        next:
          type: string
          description: Link to navigate to the previous page through the API
          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM
          nullable: true
    Meta:
      type: object
      x-apideck-schema-id: Meta
      description: Response metadata
      properties:
        items_on_page:
          type: integer
          description: Number of items returned in the data property of the response
          example: 50
        cursors:
          type: object
          description: Cursors to navigate to previous or next pages through the API
          properties:
            previous:
              type: string
              description: Cursor to navigate to the previous page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
            current:
              type: string
              description: Cursor to navigate to the current page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
            next:
              type: string
              description: Cursor to navigate to the next page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
    NotFoundResponse:
      type: object
      x-apideck-schema-id: NotFound
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 404
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Found
        type_name:
          type: string
          description: The type of error returned
          example: EntityNotFoundError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: "Could not find widget with id: '123'"
            - type: object
              x-speakeasy-detail: true
              example:
                not_found:
                  entity: widget
                  id: '123'
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#entitynotfounderror
    NotImplementedResponse:
      type: object
      x-apideck-schema-id: NotImplemented
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 501
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Implemented
        type_name:
          type: string
          description: The type of error returned
          example: MappingError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.OAuth2.flows'
            - type: object
              x-speakeasy-detail: true
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#mappingerror
    PaymentRequiredResponse:
      type: object
      x-apideck-schema-id: PaymentRequired
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 402
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Payment Required
        type_name:
          type: string
          description: The type of error returned
          example: RequestLimitError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
          x-speakeasy-error-message: true
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occurred.
          example: You have reached your limit of 2000
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#requestlimiterror
    ResolveWebhookEventRequest:
      type: object
      x-apideck-schema-id: ResolveWebhookEventRequest
      additionalProperties: true
    ResolveWebhookEventsRequest:
      type: array
      x-apideck-schema-id: ResolveWebhookEventRequest
      items:
        type: object
        additionalProperties: true
    ResolveWebhookResponse:
      type: object
      x-apideck-schema-id: ResolveWebhookResponse
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        request_id:
          type: string
          description: UUID of the request received
          example: c6af9ac6-7b61-11e6-9a41-93e8deadbeef
        timestamp:
          type: string
          description: ISO Datetime webhook event was received
          example: '2021-10-01T08:26:28.039Z'
        _raw:
          $ref: '#/components/schemas/Raw'
    ServiceId:
      type: string
      description: Service provider identifier
      example: close
    Status:
      type: string
      description: The status of the webhook.
      example: enabled
      x-apideck-enum-id: webhooks.status
      enum:
        - enabled
        - disabled
    UnauthorizedResponse:
      type: object
      x-apideck-schema-id: Unauthorized
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 401
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unauthorized
        type_name:
          type: string
          description: The type of error returned
          example: UnauthorizedError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: Missing authentication
            - type: object
              x-speakeasy-detail: true
              example:
                statusCode: 401
                error: Unauthorized
                message: Missing authentication
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
    UnexpectedErrorResponse:
      type: object
      x-apideck-schema-id: Error
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        type_name:
          type: string
          description: The type of error returned
          example: RequestHeadersValidationError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: 'Missing Header: x-apideck-consumer-id'
            - type: object
              x-speakeasy-detail: true
              example:
                missing:
                  - x-apideck-consumer-id: required
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#unauthorizederror
    UnifiedApiId:
      description: Name of Apideck Unified API
      x-apideck-enum-id: unified_api
      enum:
        - accounting
        - ats
        - calendar
        - crm
        - csp
        - customer-support
        - ecommerce
        - email
        - email-marketing
        - expense-management
        - file-storage
        - form
        - hris
        - lead
        - payroll
        - pos
        - procurement
        - project-management
        - script
        - sms
        - spreadsheet
        - team-messaging
        - issue-tracking
        - time-registration
        - transactional-email
        - vault
        - data-warehouse
      example: crm
      type: string
    UnprocessableResponse:
      type: object
      x-apideck-schema-id: Unprocessable
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 422
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unprocessable Entity
        type_name:
          type: string
          description: The type of error returned
          example: InvalidStateError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid State
          x-speakeasy-error-message: true
        detail:
          anyOf:
            - type: string
              example: Unprocessable request, please verify your request headers and body.
            - type: object
              x-speakeasy-detail: true
              example:
                error: Unprocessable
                message: Unprocessable request, please verify your request headers and body.
          description: Contains parameter or domain specific information related to the error and why it occurred.
        ref:
          type: string
          description: Link to documentation of error type
          example: https://developers.apideck.com/errors#invalidstateerror
    UpdatedAt:
      type: string
      title: Updated at (timestamp)
      description: The date and time when the object was last updated.
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      readOnly: true
      nullable: true
    UpdateWebhookRequest:
      type: object
      x-apideck-schema-id: UpdateWebhookRequest
      additionalProperties: false
      properties:
        description:
          $ref: '#/components/schemas/Description'
        status:
          $ref: '#/components/schemas/Status'
        delivery_url:
          $ref: '#/components/schemas/DeliveryUrl'
        events:
          type: array
          title: Subscribed events
          description: The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
          example: &ref_1
            - vault.connection.created
            - vault.connection.updated
          items:
            $ref: '#/components/schemas/WebhookEventType'
    UpdateWebhookResponse:
      type: object
      x-apideck-schema-id: UpdateWebhookResponse
      required:
        - status_code
        - status
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        data:
          $ref: '#/components/schemas/Webhook'
        _raw:
          $ref: '#/components/schemas/Raw'
    Webhook:
      type: object
      x-apideck-schema-id: Webhook
      additionalProperties: false
      required:
        - delivery_url
        - status
        - events
        - unified_api
        - execute_base_url
      properties:
        id:
          type: string
          example: '1234'
          readOnly: true
        description:
          $ref: '#/components/schemas/Description'
        unified_api:
          $ref: '#/components/schemas/UnifiedApiId'
        status:
          $ref: '#/components/schemas/Status'
        disabled_reason:
          type: string
          x-apideck-enum-id: webhook.disabled_reasons
          description: Indicates if the webhook has has been disabled as it reached its retry limit or if account is over the usage allocated by it's plan.
          enum:
            - none
            - retry_limit
            - usage_limit
          example: retry_limit
        delivery_url:
          $ref: '#/components/schemas/DeliveryUrl'
        execute_base_url:
          $ref: '#/components/schemas/ExecuteBaseUrl'
        events:
          type: array
          title: Subscribed events
          description: The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
          example:
            - vault.connection.created
            - vault.connection.updated
          items:
            $ref: '#/components/schemas/WebhookEventType'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
    WebhookEvent:
      type: object
      x-sdk-exclude: true
      properties:
        event_id:
          type: string
          description: Unique reference to this request event
          example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
        service_id:
          $ref: '#/components/schemas/ServiceId'
        event_type:
          $ref: '#/components/schemas/WebhookEventType'
        entity_id:
          type: string
          description: The service provider's ID of the entity that triggered this event
          example: 123456ASDF
        entity_type:
          type: string
          description: The type entity that triggered this event
          example: Company
        entity_url:
          type: string
          description: The url to retrieve entity detail.
          example: https://unify.apideck.com/crm/contacts/123456
        execution_attempt:
          type: number
          description: The current count this request event has been attempted
          example: 2
        occurred_at:
          type: string
          format: date-time
          description: ISO Datetime for when the original event occurred
          example: '2021-10-01T03:14:55.419Z'
    WebhookEventLog:
      type: object
      x-apideck-schema-id: WebhookEventLog
      additionalProperties: false
      properties:
        id:
          type: string
          example: 1d174c4d-fe9e-4377-a76c-6da22fe9cd87
        status_code:
          description: HTTP Status code that was returned.
          example: 200
          type: integer
        success:
          description: Whether or not the request was successful.
          example: true
          type: boolean
        application_id:
          $ref: '#/components/schemas/ApplicationId'
        consumer_id:
          $ref: '#/components/schemas/ConsumerId'
        unified_api:
          $ref: '#/components/schemas/UnifiedApiId'
        service:
          additionalProperties: false
          description: Apideck service provider associated with event.
          properties:
            id:
              description: Apideck service provider id.
              example: 101-data-solution
              type: string
            name:
              description: Apideck service provider name.
              example: 101 Data Solution
              type: string
          required:
            - id
            - name
          type: object
        endpoint:
          type: string
          format: uri
          description: The URL of the webhook endpoint.
          pattern: ^(https?)://
          example: https://example.com/my/webhook/endpoint
        event_type:
          type: string
          description: Name of source event that webhook is subscribed to.
          example: vault.connection.updated
        execution_attempt:
          type: number
          description: Number of attempts webhook endpoint was called before a success was returned or eventually failed
          example: 3
        http_method:
          description: HTTP Method of request to endpoint.
          example: GET
          type: string
        timestamp:
          description: ISO Date and time when the request was made.
          example: '2021-07-12T14:26:17.420Z'
          type: string
        entity_type:
          type: string
          description: Name of the Entity described by the attributes delivered within payload
          example: Connection
        request_body:
          type: string
          description: The JSON stringified payload that was delivered to the webhook endpoint.
          example: '{"entity":{"id":"2222+test_user_id","application_id":"2222","consumer_id":"test_user_id","name":"ActiveCampaign","icon":"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png","logo":"https://www.activecampaign.com/site/assets/social-2x.png","unified_api":"crm","service_id":"activecampaign","auth_type":"apiKey","enabled":true,"tag_line":"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.","website":"https://www.activecampaign.com/","settings":{"instance_url":"https://eu28.salesforce.com","base_url":"https://updated.api-us1.com"},"metadata":{"plan":"enterprise","account":{"name":"My Company"}},"state":"callable","created_at":"2021-09-10T10:39:49.628Z","updated_at":"2021-09-10T10:39:52.715Z"},"entityType":"Connection"}'
        response_body:
          type: string
          description: The JSON stringified response that was returned from the webhook endpoint.
          example: '{"status":"OK"}'
        retry_scheduled:
          description: If the request has not hit the max retry limit and will be retried.
          example: true
          type: boolean
        attempts:
          type: array
          description: record of each attempt to call webhook endpoint
          items:
            type: object
            properties:
              timestamp:
                description: ISO Date and time when the request was made.
                example: '2021-07-12T14:26:17.420Z'
                type: string
              execution_attempt:
                type: number
                description: Number of attempts webhook endpoint was called before a success was returned or eventually failed
                example: 3
              status_code:
                description: HTTP Status code that was returned.
                example: 200
                type: integer
              success:
                description: Whether or not the request was successful.
                example: true
                type: boolean
    WebhookEventLogsFilter:
      type: object
      x-apideck-schema-id: WebhookEventLogsFilter
      properties:
        exclude_apis:
          type: string
          nullable: true
          example: vault,proxy
        service:
          type: object
          nullable: true
          properties:
            id:
              type: string
        consumer_id:
          type: string
          nullable: true
          example: test_user_id
        entity_type:
          type: string
          nullable: true
          example: Connection
        event_type:
          type: string
          nullable: true
          example: vault.connection.callable
    WebhookEventType:
      x-apideck-enum-id: webhooks.event_type
      enum:
        - '*'
        - crm.activity.created
        - crm.activity.updated
        - crm.activity.deleted
        - crm.company.created
        - crm.company.updated
        - crm.company.deleted
        - crm.contact.created
        - crm.contact.updated
        - crm.contact.deleted
        - crm.lead.created
        - crm.lead.updated
        - crm.lead.deleted
        - crm.note.created
        - crm.note.updated
        - crm.note.deleted
        - crm.opportunity.created
        - crm.opportunity.updated
        - crm.opportunity.deleted
        - lead.lead.created
        - lead.lead.updated
        - lead.lead.deleted
        - vault.connection.created
        - vault.connection.updated
        - vault.connection.disabled
        - vault.connection.deleted
        - vault.connection.callable
        - vault.connection.revoked
        - vault.connection.token_refresh.failed
        - ats.job.created
        - ats.job.updated
        - ats.job.deleted
        - ats.applicant.created
        - ats.applicant.updated
        - ats.applicant.deleted
        - accounting.customer.created
        - accounting.customer.updated
        - accounting.customer.deleted
        - accounting.invoice.created
        - accounting.invoice.updated
        - accounting.invoice.deleted
        - accounting.invoice_item.created
        - accounting.invoice_item.updated
        - accounting.invoice_item.deleted
        - accounting.ledger_account.created
        - accounting.ledger_account.updated
        - accounting.ledger_account.deleted
        - accounting.tax_rate.created
        - accounting.tax_rate.updated
        - accounting.tax_rate.deleted
        - accounting.bill.created
        - accounting.bill.updated
        - accounting.bill.deleted
        - accounting.payment.created
        - accounting.payment.updated
        - accounting.payment.deleted
        - accounting.supplier.created
        - accounting.supplier.updated
        - accounting.supplier.deleted
        - accounting.purchase_order.created
        - accounting.purchase_order.updated
        - accounting.purchase_order.deleted
        - accounting.credit_note.created
        - accounting.credit_note.updated
        - accounting.credit_note.deleted
        - pos.order.created
        - pos.order.updated
        - pos.order.deleted
        - pos.product.created
        - pos.product.updated
        - pos.product.deleted
        - pos.payment.created
        - pos.payment.updated
        - pos.payment.deleted
        - pos.merchant.created
        - pos.merchant.updated
        - pos.merchant.deleted
        - pos.location.created
        - pos.location.updated
        - pos.location.deleted
        - pos.item.created
        - pos.item.updated
        - pos.item.deleted
        - pos.modifier.created
        - pos.modifier.updated
        - pos.modifier.deleted
        - pos.modifier-group.created
        - pos.modifier-group.updated
        - pos.modifier-group.deleted
        - hris.employee.created
        - hris.employee.updated
        - hris.employee.deleted
        - hris.employee.terminated
        - hris.company.created
        - hris.company.updated
        - hris.company.deleted
        - file-storage.file.created
        - file-storage.file.updated
        - file-storage.file.deleted
        - file-storage.drive.updated
        - issue-tracking.ticket.created
        - issue-tracking.ticket.updated
        - issue-tracking.ticket.deleted
        - ats.application.created
        - ats.application.updated
        - ats.application.deleted
        - accounting.expense.created
        - accounting.expense.updated
        - accounting.expense.deleted
        - ecommerce.order.created
        - ecommerce.order.updated
        - ecommerce.order.deleted
        - ecommerce.product.created
        - ecommerce.product.updated
        - ecommerce.product.deleted
        - ecommerce.customer.created
        - ecommerce.customer.updated
        - ecommerce.customer.deleted
        - accounting.quote.created
        - accounting.quote.updated
        - accounting.quote.deleted
        - accounting.project.created
        - accounting.project.updated
        - accounting.project.deleted
      example: crm.company.created
      type: string
    Raw:
      title: raw
      type: object
      x-apideck-schema-id: Raw
      description: Raw response from the integration when raw=true query param is provided
      nullable: true
      additionalProperties: true
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Authorization
      description: |
        To access our API, you need to sign up and obtain your unique API key. Each Unify application is assigned a single API key. You can locate your API key in the Configuration Settings section of your Apideck application. Additionally, your application’s application_id is available on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header.

        - Bearer authorization header: `Authorization: Bearer "YOUR_API_KEY_HERE"`
        - Application id header: `x-apideck-app-id: "YOUR_APP_ID_HERE"`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
security:
  - apiKey: []
tags:
  - name: Webhooks
    description: ''
    x-apideck-model:
      $ref: '#/components/schemas/Webhook'
paths:
  /webhook/webhooks:
    get:
      tags:
        - Webhooks
      operationId: webhooksAll
      summary: List webhook subscriptions
      description: List all webhook subscriptions
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetWebhooksResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: {}
    post:
      tags:
        - Webhooks
      operationId: webhooksAdd
      summary: Create webhook subscription
      description: Create a webhook subscription to receive events
      parameters:
        - $ref: '#/components/parameters/applicationId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source:
            webhook:
              description: A description
              unified_api: crm
              status: enabled
              delivery_url: https://example.com/my/webhook/endpoint
              events: *ref_0
  /webhook/webhooks/{id}:
    get:
      tags:
        - Webhooks
      operationId: webhooksOne
      summary: Get webhook subscription
      description: Get the webhook subscription details
      parameters:
        - $ref: '#/components/parameters/webhookToken'
        - $ref: '#/components/parameters/applicationId'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source:
            id: id_example
    patch:
      tags:
        - Webhooks
      operationId: webhooksUpdate
      summary: Update webhook subscription
      description: Update a webhook subscription
      parameters:
        - $ref: '#/components/parameters/webhookToken'
        - $ref: '#/components/parameters/applicationId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source:
            id: id_example
            webhook:
              description: A description
              status: enabled
              delivery_url: https://example.com/my/webhook/endpoint
              events: *ref_1
    delete:
      tags:
        - Webhooks
      operationId: webhooksDelete
      summary: Delete webhook subscription
      description: Delete a webhook subscription
      parameters:
        - $ref: '#/components/parameters/webhookToken'
        - $ref: '#/components/parameters/applicationId'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeleteWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source:
            id: id_example
  /webhook/webhooks/{id}/execute/{serviceId}:
    post:
      tags:
        - Webhooks
      operationId: webhooksExecute
      summary: Execute a webhook
      description: Execute a webhook
      x-sdk-exclude: true
      x-speakeasy-ignore: true
      x-internal: true
      parameters:
        - $ref: '#/components/parameters/webhookToken'
        - $ref: '#/components/parameters/servicePathId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ExecuteWebhookEventRequest'
                - $ref: '#/components/schemas/ExecuteWebhookEventsRequest'
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ExecuteWebhookEventRequest'
                - $ref: '#/components/schemas/ExecuteWebhookEventsRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source:
            id: id_example
            serviceId: factorialhr
            webhooksExecute: {}
  /webhook/webhooks/{id}/x/{serviceId}:
    post:
      tags:
        - Webhooks
      operationId: webhooksShortExecute
      summary: Execute a webhook
      description: Execute a webhook
      x-sdk-exclude: true
      x-speakeasy-ignore: true
      x-internal: true
      parameters:
        - $ref: '#/components/parameters/webhookToken'
        - $ref: '#/components/parameters/servicePathId'
        - $ref: '#/components/parameters/lookupId'
        - $ref: '#/components/parameters/downstreamEventType'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ExecuteWebhookEventRequest'
                - $ref: '#/components/schemas/ExecuteWebhookEventsRequest'
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ExecuteWebhookEventRequest'
                - $ref: '#/components/schemas/ExecuteWebhookEventsRequest'
      responses:
        '200':
          $ref: '#/components/responses/ExecuteWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source:
            id: id_example
            serviceId: factorialhr
            webhooksShortExecute: {}
  /webhook/w/{id}/{serviceId}:
    post:
      tags:
        - Webhooks
      operationId: webhooksResolve
      summary: Resolve and Execute a connection webhook
      description: Resolve a webhook based on lookup_id and then execute it
      x-sdk-exclude: true
      x-speakeasy-ignore: true
      x-internal: true
      parameters:
        - $ref: '#/components/parameters/lookupIdToken'
        - $ref: '#/components/parameters/servicePathId'
        - $ref: '#/components/parameters/downstreamEventType'
        - $ref: '#/components/parameters/validationToken'
      security:
        - apiKey: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ResolveWebhookEventRequest'
                - $ref: '#/components/schemas/ResolveWebhookEventsRequest'
          text/plain:
            schema:
              type: string
              description: Plain text body for webhook validation requests
      responses:
        '200':
          $ref: '#/components/responses/ResolveWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source:
            id: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijk2MDAwYzIzLWI1NmItNGRlOC1iZmEzLTMxNTAzMTE3YzBmNyJ9.rAXnsmZ4O7eF0aDwdflkxAJQwMUfWs5989WfmspNZ6Q
            serviceId: factorialhr
            webhooksResolve: {}
    get:
      tags:
        - Webhooks
      operationId: webhookVerify
      summary: Resolve and Execute a connection webhook
      description: Resolve a webhook based on lookup_id and then execute it
      x-sdk-exclude: true
      x-speakeasy-ignore: true
      x-internal: true
      parameters:
        - $ref: '#/components/parameters/lookupIdToken'
        - $ref: '#/components/parameters/servicePathId'
        - $ref: '#/components/parameters/downstreamEventType'
      responses:
        '200':
          $ref: '#/components/responses/ResolveWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source:
            id: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijk2MDAwYzIzLWI1NmItNGRlOC1iZmEzLTMxNTAzMTE3YzBmNyJ9.rAXnsmZ4O7eF0aDwdflkxAJQwMUfWs5989WfmspNZ6Q
            serviceId: factorialhr
  /webhook/logs:
    get:
      tags:
        - Webhooks
      operationId: eventLogsAll
      summary: List event logs
      description: List event logs
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filter'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetWebhookEventLogsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: {}
